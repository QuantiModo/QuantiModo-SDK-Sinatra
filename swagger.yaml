---
swagger: "2.0"
info:
  description: "Welcome to QuantiModo API! QuantiModo makes it easy to retrieve normalized\
    \ user data from a wide array of devices and applications. [Learn about QuantiModo](https://quantimo.do)\
    \ or contact us at <api@quantimo.do>.\n\n\n\n\n\n\n\n\nBefore you get started,\
    \ you will need to:\n* Sign in/Sign up, and add some data at [https://app.quantimo.do/api/v2/account/connectors](https://app.quantimo.do/api/v2/account/connectors)\
    \ to try out the API for yourself\n* Create an app to get your client id and secret\
    \ at [https://app.quantimo.do/api/v2/apps](https://app.quantimo.do/api/v2/apps)\n\
    * As long as you're signed in, it will use your browser's cookie for authentication.\
    \  However, client applications must use OAuth2 tokens to access the API.\n\n\n\
    \n\n## Application Endpoints\nThese endpoints give you access to all authorized\
    \ users' data for that application.\n### Getting Application Token\nMake a `POST`\
    \ request to `/api/v2/oauth/access_token`\n\n\n\n\n\n\n\n * `grant_type` Must\
    \ be `client_credentials`.\n\n\n\n\n\n\n\n * `clientId` Your application's clientId.\n\
    \n\n\n\n\n\n\n * `client_secret` Your application's client_secret.\n\n\n\n\n\n\
    \n\n * `redirect_uri` Your application's redirect url.\n\n\n\n\n\n\n\n\n\n\n\n\
    \n\n\n\n## Example Queries\n### Query Options\nThe standard query options for\
    \ QuantiModo API are as described in the table below. These are the available\
    \ query options in QuantiModo API:\n<table>\n\n\n\n\n\n\n\n    <thead>\n\n\n\n\
    \n\n\n\n        <tr>\n\n\n\n\n\n\n\n            <th>Parameter</th>\n\n\n\n\n\n\
    \n\n            <th>Description</th>\n\n\n\n\n\n\n\n        </tr>\n\n\n\n\n\n\n\
    \n    </thead>\n\n\n\n\n\n\n\n    <tbody>\n\n\n\n\n\n\n\n        <tr>\n\n\n\n\n\
    \n\n\n            <td>limit</td>\n\n\n\n\n\n\n\n            <td>The LIMIT is used\
    \ to limit the number of results returned.\n\nSo\nif you have 1000 results, but\
    \ only want to the first 10, you would set this to 10 and offset to 0. The maximum\
    \ limit is 200 records.</td>\n\n\n\n\n\n\n\n        </tr>\n\n\n\n\n\n\n\n    \
    \    <tr>\n\n\n\n\n\n\n\n            <td>offset</td>\n\n\n\n\n\n\n\n         \
    \   <td>Suppose you wanted to show results 11-20. You'd set the\n\n\n\noffset\
    \ to 10 and the limit to 10.</td>\n\n\n\n\n\n\n\n        </tr>\n\n\n\n\n\n\n\n\
    \        <tr>\n\n\n\n\n\n\n\n            <td>sort</td>\n\n\n\n\n\n\n\n       \
    \     <td>Sort by given field. If the field is prefixed with '-', it\n\n\n\nwill\
    \ sort in descending order.</td>\n\n\n\n\n\n\n\n        </tr>\n\n\n\n\n\n\n\n\
    \    </tbody>\n\n\n\n\n\n\n\n</table>\n\n\n\n\n\n\n\n\n### Pagination Conventions\n\
    Since the maximum limit is 200 records, to get more than that you'll have to make\
    \ multiple API calls and page through the results. To retrieve all the data, you\
    \ can iterate through data by using the `limit` and `offset` query parameters.For\
    \ example, if you want to retrieve data from 61-80 then you can use a query with\
    \ the following parameters,\n\n\n\n\n\n\n\n\n`/v2/variables?limit=20&offset=60`\n\
    \n\n\n\n\n\n\n\nGenerally, you'll be retrieving new or updated user data. To avoid\
    \ unnecessary API calls, you'll want to store your last refresh time locally.\
    \  Initially, it should be set to 0. Then whenever you make a request to get new\
    \ data, you should limit the returned results to those updated since your last\
    \ refresh by appending append\n\n\n\n\n\n\n\n\n`?lastUpdated=(ge)&quot2013-01-D01T01:01:01&quot`\n\
    \n\n\n\n\n\n\n\nto your request.\n\n\n\n\n\n\n\n\nAlso for better pagination,\
    \ you can get link to the records of first, last, next and previous page from\
    \ response headers:\n* `Total-Count` - Total number of results for given query\n\
    * `Link-First` - Link to get first page records\n* `Link-Last` - Link to get last\
    \ page records\n* `Link-Prev` - Link to get previous records set\n* `Link-Next`\
    \ - Link to get next records set\n\n\n\n\n\n\n\n\nRemember, response header will\
    \ be only sent when the record set is available. e.g. You will not get a ```Link-Last```\
    \ & ```Link-Next``` when you query for the last page.\n\n\n\n\n\n\n\n\n### Filter\
    \ operators support\nAPI supports the following operators with filter parameters:\n\
    <br>\n**Comparison operators**\n\n\n\n\n\n\n\n\nComparison operators allow you\
    \ to limit results to those greater than, less than, or equal to a specified value\
    \ for a specified attribute. These operators can be used with strings, numbers,\
    \ and dates. The following comparison operators are available:\n* `gt` for `greater\
    \ than` comparison\n* `ge` for `greater than or equal` comparison\n* `lt` for\
    \ `less than` comparison\n* `le` for `less than or equal` comparison\n\n\n\n\n\
    \n\n\n\nThey are included in queries using the following format:\n\n\n\n\n\n\n\
    \n\n`(<operator>)<value>`\n\n\n\n\n\n\n\n\nFor example, in order to filter value\
    \ which is greater than 21, the following query parameter should be used:\n\n\n\
    \n\n\n\n\n\n`?value=(gt)21`\n<br><br>\n**Equals/In Operators**\n\n\n\n\n\n\n\n\
    \nIt also allows filtering by the exact value of an attribute or by a set of values,\
    \ depending on the type of value passed as a query parameter. If the value contains\
    \ commas, the parameter is split on commas and used as array input for `IN` filtering,\
    \ otherwise the exact match is applied. In order to only show records which have\
    \ the value 42, the following query should be used:\n\n\n\n\n\n\n\n\n`?value=42`\n\
    \n\n\n\n\n\n\n\nIn order to filter records which have value 42 or 43, the following\
    \ query should be used:\n\n\n\n\n\n\n\n\n`?value=42,43`\n<br><br>\n**Like operators**\n\
    \n\n\n\n\n\n\n\nLike operators allow filtering using `LIKE` query. This operator\
    \ is triggered if exact match operator is used, but value contains `%` sign as\
    \ the first or last character. In order to filter records which category that\
    \ start with `Food`, the following query should be used:\n\n\n\n\n\n\n\n\n`?category=Food%`\n\
    <br><br>\n**Negation operator**\n\n\n\n\n\n\n\n\nIt is possible to get negated\
    \ results of a query by prefixed the operator with `!`. Some examples:\n\n\n\n\
    \n\n\n\n\n`//filter records except those with value are not 42 or 43`<br>\n`?value=!42,43`\n\
    \n\n\n\n\n\n\n\n`//filter records with value not greater than 21`<br>\n`?value=!(ge)21`\n\
    <br><br>\n**Multiple constraints for single attribute**\n\n\n\n\n\n\n\n\nIt is\
    \ possible to apply multiple constraints by providing an array of query filters:\n\
    \n\n\n\n\n\n\n\nFilter all records which value is greater than 20.2 and less than\
    \ 20.3<br>\n`?value[]=(gt)20.2&value[]=(lt)20.3`\n\n\n\n\n\n\n\n\nFilter all records\
    \ which value is greater than 20.2 and less than 20.3 but not 20.2778<br>\n`?value[]=(gt)20.2&value[]=(lt)20.3&value[]=!20.2778`<br><br>\n"
  version: "2.0.6"
  title: "QuantiModo"
  termsOfService: "https://quantimo.do/terms/"
  contact:
    name: "info@quantimo.do"
basePath: "/api"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /v1/aggregatedCorrelations:
    get:
      tags:
      - "correlations"
      summary: "Get aggregated correlations"
      description: "Get correlations based on the anonymized aggregate data from all\
        \ QuantiModo users."
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "effect"
        in: "query"
        description: "ORIGINAL variable name of the effect variable for which the\
          \ user desires correlations"
        required: false
        type: "string"
      - name: "cause"
        in: "query"
        description: "ORIGINAL variable name of the cause variable for which the user\
          \ desires correlations"
        required: false
        type: "string"
      - name: "correlationCoefficient"
        in: "query"
        description: "Pearson correlation coefficient between cause and effect after\
          \ lagging by onset delay and grouping by duration of action"
        required: false
        type: "string"
      - name: "onsetDelay"
        in: "query"
        description: "The number of seconds which pass following a cause measurement\
          \ before an effect would likely be observed."
        required: false
        type: "string"
      - name: "durationOfAction"
        in: "query"
        description: "The time in seconds over which the cause would be expected to\
          \ exert a measurable effect. We have selected a default value for each variable.\
          \ This default value may be replaced by a user specified by adjusting their\
          \ variable user settings."
        required: false
        type: "string"
      - name: "lastUpdated"
        in: "query"
        description: "The time that this measurement was last updated in the UTC format\
          \ \"YYYY-MM-DDThh:mm:ss\""
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The LIMIT is used to limit the number of results returned. So\
          \ if you have 1000 results, but only want to the first 10, you would set\
          \ this to 10 and offset to 0."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "Now suppose you wanted to show results 11-20. You'd set the\
          \ offset to 10 and the limit to 10."
        required: false
        type: "integer"
      - name: "sort"
        in: "query"
        description: "Sort by given field. If the field is prefixed with `-, it will\
          \ sort in descending order."
        required: false
        type: "integer"
      responses:
        200:
          description: "Successful Operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Correlation"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
    post:
      tags:
      - "correlations"
      summary: "Store or Update a Correlation"
      description: "Add correlation"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        description: "Provides correlation data"
        required: true
        schema:
          $ref: "#/definitions/PostCorrelation"
      responses:
        200:
          description: "Successful Operation"
        400:
          description: "Bad request"
          schema:
            $ref: "#/definitions/JsonErrorResponse"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/connect.js:
    get:
      tags:
      - "connectors"
      summary: "Get embeddable connect javascript"
      description: "Get embeddable connect javascript. Usage:\n\n  - Embedding in\
        \ applications with popups for 3rd-party authentication\nwindows.\n\n    Use\
        \ `qmSetupInPopup` function after connecting `connect.js`.\n\n  - Embedding\
        \ in applications with popups for 3rd-party authentication\nwindows.\n\n \
        \   Requires a selector to block. It will be embedded in this block.\n\n \
        \   Use `qmSetupOnPage` function after connecting `connect.js`.\n\n  - Embedding\
        \ in mobile applications without popups for 3rd-party\nauthentication.\n\n\
        \    Use `qmSetupOnMobile` function after connecting `connect.js`.\n\n   \
        \ if using the MoodiModo Clones, Use `qmSetupOnIonic` function after connecting\
        \ `connect.js`. "
      produces:
      - "application/x-javascript"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      responses:
        200:
          description: "Embeddable connect javascript was returned"
  /v1/connect/mobile:
    get:
      tags:
      - "connectors"
      summary: "Mobile connect page"
      description: "This page is designed to be opened in a webview.  Instead of using\
        \ popup authentication boxes, it uses redirection. You can include the user's\
        \ access_token as a URL parameter like https://app.quantimo.do/api/v1/connect/mobile?access_token=123"
      produces:
      - "text/html"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User OAuth access token"
        required: true
        type: "string"
      responses:
        200:
          description: "Mobile connect page was returned"
        401:
          description: "User token is missing"
        403:
          description: "User token is incorrect"
  /v1/connectors/list:
    get:
      tags:
      - "connectors"
      summary: "List of Connectors"
      description: "A connector pulls data from other data providers using their API\
        \ or a screenscraper. Returns a list of all available connectors and information\
        \ about them such as their id, name, whether the user has provided access,\
        \ logo url, connection instructions, and the update history."
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful Operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Connector"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/connectors/{connector}/connect:
    get:
      tags:
      - "connectors"
      summary: "Obtain a token from 3rd party data source"
      description: "Attempt to obtain a token from the data provider, store it in\
        \ the database. With this, the connector to continue to obtain new user data\
        \ until the token is revoked."
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "connector"
        in: "path"
        description: "Lowercase system name of the source application or device. Get\
          \ a list of available connectors from the /connectors/list endpoint."
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Not Authenticated"
        404:
          description: "Method not found. Could not execute the requested method."
        500:
          description: "Error during update. Unsupported response from update()."
      security:
      - oauth2:
        - "basic"
  /v1/connectors/{connector}/connectInstructions:
    get:
      tags:
      - "connectors"
      summary: "Connection Instructions"
      description: "Returns instructions that describe what parameters and endpoint\
        \ to use to connect to the given data provider."
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "connector"
        in: "path"
        description: "Lowercase system name of the source application or device. Get\
          \ a list of available connectors from the /connectors/list endpoint."
        required: true
        type: "string"
      - name: "parameters"
        in: "query"
        description: "JSON Array of Parameters for the request to enable connector."
        required: true
        type: "string"
      - name: "url"
        in: "query"
        description: "URL which should be used to enable the connector."
        required: true
        type: "string"
      - name: "usePopup"
        in: "query"
        description: "Should use popup when enabling connector"
        required: true
        type: "boolean"
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Not Authenticated"
        404:
          description: "Method not found. Could not execute the requested method."
        500:
          description: "Error during update. Unsupported response from update()."
      security:
      - oauth2:
        - "basic"
  /v1/connectors/{connector}/connectParameter:
    get:
      tags:
      - "connectors"
      summary: "Connect Parameter"
      description: "Returns instructions that describe what parameters and endpoint\
        \ to use to connect to the given data provider."
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "connector"
        in: "path"
        description: "Lowercase system name of the source application or device. Get\
          \ a list of available connectors from the /connectors/list endpoint."
        required: true
        type: "string"
      - name: "defaultValue"
        in: "query"
        description: "Default parameter value"
        required: false
        type: "string"
      - name: "displayName"
        in: "query"
        description: "Name of the parameter that is user visible in the form"
        required: true
        type: "string"
      - name: "key"
        in: "query"
        description: "Name of the property that the user has to enter such as username\
          \ or password Connector (used in HTTP request)"
        required: true
        type: "string"
      - name: "placeholder"
        in: "query"
        description: "Placeholder hint value for the parameter input tag."
        required: true
        type: "string"
      - name: "type"
        in: "query"
        description: "Type of input field such as those found here http://www.w3schools.com/tags/tag_input.asp"
        required: true
        type: "string"
      - name: "usePopup"
        in: "query"
        description: "Should use popup when enabling connector"
        required: true
        type: "boolean"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ConnectorInstruction"
        401:
          description: "Not Authenticated"
        404:
          description: "Method not found. Could not execute the requested method."
        500:
          description: "Error during update. Unsupported response from update()."
      security:
      - oauth2:
        - "basic"
  /v1/connectors/{connector}/disconnect:
    get:
      tags:
      - "connectors"
      summary: "Delete stored connection info"
      description: "The disconnect method deletes any stored tokens or connection\
        \ information from the connectors database."
      produces:
      - "application/json"
      parameters:
      - name: "connector"
        in: "path"
        description: "Lowercase system name of the source application or device. Get\
          \ a list of available connectors from the /connectors/list endpoint."
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
        401:
          description: "Not Authenticated"
        404:
          description: "Method not found. Could not execute the requested method."
        500:
          description: "Error during update. Unsupported response from update()."
      security:
      - oauth2:
        - "basic"
  /v1/connectors/{connector}/info:
    get:
      tags:
      - "connectors"
      summary: "Get connector info for user"
      description: "Returns information about the connector such as the connector\
        \ id, whether or not is connected for this user (i.e. we have a token or credentials),\
        \ and its update history for the user."
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "connector"
        in: "path"
        description: "Lowercase system name of the source application or device. Get\
          \ a list of available connectors from the /connectors/list endpoint."
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ConnectorInfo"
        401:
          description: "Not Authenticated"
        404:
          description: "Method not found. Could not execute the requested method."
        500:
          description: "Error during update. Please contact info@quantimo.do."
      security:
      - oauth2:
        - "basic"
  /v1/connectors/{connector}/update:
    get:
      tags:
      - "connectors"
      summary: "Sync with data source"
      description: "The update method tells the QM Connector Framework to check with\
        \ the data provider (such as Fitbit or MyFitnessPal) and retrieve any new\
        \ measurements available."
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "connector"
        in: "path"
        description: "Lowercase system name of the source application or device"
        required: true
        type: "string"
      responses:
        200:
          description: "Connection Successful"
        401:
          description: "Not Authenticated"
        404:
          description: "Method not found. Could not execute the requested method."
        500:
          description: "Error during update. Unsupported response from update()."
      security:
      - oauth2:
        - "basic"
  /v1/correlations:
    get:
      tags:
      - "correlations"
      summary: "Get correlations"
      description: "Get correlations.<br>Supported filter parameters:<br><ul><li><b>correlationCoefficient</b>\
        \ - Pearson correlation coefficient between cause and effect after lagging\
        \ by onset delay and grouping by duration of action</li><li><b>onsetDelay</b>\
        \ - The number of seconds which pass following a cause measurement before\
        \ an effect would likely be observed.</li><li><b>durationOfAction</b> - The\
        \ time in seconds over which the cause would be expected to exert a measurable\
        \ effect. We have selected a default value for each variable. This default\
        \ value may be replaced by a user specified by adjusting their variable user\
        \ settings.</li><li><b>lastUpdated</b> - The time that this measurement was\
        \ last updated in the UTC format \"YYYY-MM-DDThh:mm:ss\"</li></ul><br>"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "effect"
        in: "query"
        description: "ORIGINAL variable name of the effect variable for which the\
          \ user desires correlations"
        required: false
        type: "string"
      - name: "cause"
        in: "query"
        description: "ORIGINAL variable name of the cause variable for which the user\
          \ desires correlations"
        required: false
        type: "string"
      - name: "correlationCoefficient"
        in: "query"
        description: "Pearson correlation coefficient between cause and effect after\
          \ lagging by onset delay and grouping by duration of action"
        required: false
        type: "string"
      - name: "onsetDelay"
        in: "query"
        description: "The number of seconds which pass following a cause measurement\
          \ before an effect would likely be observed."
        required: false
        type: "string"
      - name: "durationOfAction"
        in: "query"
        description: "The time in seconds over which the cause would be expected to\
          \ exert a measurable effect. We have selected a default value for each variable.\
          \ This default value may be replaced by a user specified by adjusting their\
          \ variable user settings."
        required: false
        type: "string"
      - name: "lastUpdated"
        in: "query"
        description: "The time that this measurement was last updated in the UTC format\
          \ \"YYYY-MM-DDThh:mm:ss\""
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The LIMIT is used to limit the number of results returned. So\
          \ if you have 1000 results, but only want to the first 10, you would set\
          \ this to 10 and offset to 0."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "Now suppose you wanted to show results 11-20. You'd set the\
          \ offset to 10 and the limit to 10."
        required: false
        type: "integer"
      - name: "sort"
        in: "query"
        description: "Sort by given field. If the field is prefixed with `-, it will\
          \ sort in descending order."
        required: false
        type: "integer"
      responses:
        200:
          description: "Successful Operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Correlation"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/measurementSources:
    get:
      tags:
      - "measurements"
      summary: "Get measurement sources"
      description: "Returns a list of all the apps from which measurement data is\
        \ obtained."
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/MeasurementSource"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
    post:
      tags:
      - "measurements"
      summary: "Add a data source"
      description: "Add a life-tracking app or device to the QuantiModo list of data\
        \ sources."
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        description: "An array of names of data sources you want to add."
        required: true
        schema:
          $ref: "#/definitions/MeasurementSource"
      responses:
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/measurements:
    get:
      tags:
      - "measurements"
      summary: "Get measurements for this user"
      description: "Measurements are any value that can be recorded like daily steps,\
        \ a mood rating, or apples eaten. <br>Supported filter parameters:<br><ul><li><b>value</b>\
        \ - Value of measurement</li><li><b>lastUpdated</b> - The time that this measurement\
        \ was created or last updated in the UTC format \"YYYY-MM-DDThh:mm:ss\"</li></ul><br>"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "variableName"
        in: "query"
        description: "Name of the variable you want measurements for"
        required: false
        type: "string"
      - name: "variableCategoryName"
        in: "query"
        description: "Name of the variable category you want measurements for"
        required: false
        type: "string"
      - name: "source"
        in: "query"
        description: "Name of the source you want measurements for (supports exact\
          \ name match only)"
        required: false
        type: "string"
      - name: "value"
        in: "query"
        description: "Value of measurement"
        required: false
        type: "string"
      - name: "lastUpdated"
        in: "query"
        description: "The time that this measurement was created or last updated in\
          \ the format \"YYYY-MM-DDThh:mm:ss\""
        required: false
        type: "string"
      - name: "unit"
        in: "query"
        description: "The unit you want the measurements returned in"
        required: false
        type: "string"
      - name: "startTime"
        in: "query"
        description: "The lower limit of measurements returned (Epoch)"
        required: false
        type: "string"
      - name: "createdAt"
        in: "query"
        description: "The time the measurement record was first created in the format\
          \ YYYY-MM-DDThh:mm:ss. Time zone should be UTC and not local."
        required: false
        type: "string"
      - name: "updatedAt"
        in: "query"
        description: "The time the measurement record was last changed in the format\
          \ YYYY-MM-DDThh:mm:ss. Time zone should be UTC and not local."
        required: false
        type: "string"
      - name: "endTime"
        in: "query"
        description: "The upper limit of measurements returned (Epoch)"
        required: false
        type: "string"
      - name: "groupingWidth"
        in: "query"
        description: "The time (in seconds) over which measurements are grouped together"
        required: false
        type: "integer"
      - name: "groupingTimezone"
        in: "query"
        description: "The time (in seconds) over which measurements are grouped together"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The LIMIT is used to limit the number of results returned. So\
          \ if you have 1000 results, but only want to the first 10, you would set\
          \ this to 10 and offset to 0."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "Now suppose you wanted to show results 11-20. You'd set the\
          \ offset to 10 and the limit to 10."
        required: false
        type: "integer"
      - name: "sort"
        in: "query"
        description: "Sort by given field. If the field is prefixed with `-, it will\
          \ sort in descending order."
        required: false
        type: "integer"
      responses:
        200:
          description: "Successful Operation"
          schema:
            $ref: "#/definitions/Measurement"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
    post:
      tags:
      - "measurements"
      summary: "Post a new set or update existing measurements to the database"
      description: "You can submit or update multiple measurements in a \"measurements\"\
        \ sub-array.  If the variable these measurements correspond to does not already\
        \ exist in the database, it will be automatically added.  The request body\
        \ should look something like [{\"measurements\":[{\"startTime\":1439389320,\"\
        value\":\"3\"}, {\"startTime\":1439389319,\"value\":\"2\"}],\"name\":\"Acne\
        \ (out of 5)\",\"source\":\"QuantiModo\",\"category\":\"Symptoms\",\"combinationOperation\"\
        :\"MEAN\",\"unit\":\"/5\"}]"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        description: "An array of measurements you want to insert."
        required: true
        schema:
          $ref: "#/definitions/MeasurementSet"
      responses:
        200:
          description: "Measurements successfully stored"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "writemeasurements"
  /v1/measurements/daily:
    get:
      tags:
      - "measurements"
      summary: "Get daily measurements for this user"
      description: "Measurements are any value that can be recorded like daily steps,\
        \ a mood rating, or apples eaten. <br>Supported filter parameters:<br><ul><li><b>value</b>\
        \ - Value of measurement</li><li><b>lastUpdated</b> - The time that this measurement\
        \ was created or last updated in the UTC format \"YYYY-MM-DDThh:mm:ss\"</li></ul><br>"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "variableName"
        in: "query"
        description: "Name of the variable you want measurements for"
        required: true
        type: "string"
      - name: "abbreviatedUnitName"
        in: "query"
        description: "The unit your want the measurements in"
        required: false
        type: "string"
      - name: "startTime"
        in: "query"
        description: "The lower limit of measurements returned (Iso8601)"
        required: false
        type: "string"
      - name: "endTime"
        in: "query"
        description: "The upper limit of measurements returned (Iso8601)"
        required: false
        type: "string"
      - name: "groupingWidth"
        in: "query"
        description: "The time (in seconds) over which measurements are grouped together"
        required: false
        type: "integer"
      - name: "groupingTimezone"
        in: "query"
        description: "The time (in seconds) over which measurements are grouped together"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The LIMIT is used to limit the number of results returned. So\
          \ if you have 1000 results, but only want to the first 10, you would set\
          \ this to 10 and offset to 0."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "Now suppose you wanted to show results 11-20. You'd set the\
          \ offset to 10 and the limit to 10."
        required: false
        type: "integer"
      - name: "sort"
        in: "query"
        description: "Sort by given field. If the field is prefixed with `-, it will\
          \ sort in descending order."
        required: false
        type: "integer"
      responses:
        200:
          description: "Successful Operation"
          schema:
            $ref: "#/definitions/Measurement"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/measurements/delete:
    post:
      tags:
      - "measurements"
      summary: "Delete a measurement"
      description: "Delete a previously submitted measurement"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "The startTime and variableId of the measurement to be deleted."
        required: true
        schema:
          $ref: "#/definitions/MeasurementDelete"
      responses:
        200:
          description: "Successful Operation"
          schema:
            $ref: "#/definitions/CommonResponse"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/measurementsRange:
    get:
      tags:
      - "measurements"
      summary: "Get measurements range for this user"
      description: "Get Unix time-stamp (epoch time) of the user's first and last\
        \ measurements taken."
      produces:
      - "application/json"
      parameters:
      - name: "sources"
        in: "query"
        description: "Enter source name to limit to specific source (varchar)"
        required: false
        type: "string"
      - name: "user"
        in: "query"
        description: "If not specified, uses currently logged in user (bigint)"
        required: false
        type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/MeasurementRange"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/organizations/{organizationId}/users:
    post:
      tags:
      - "organizations"
      - "user"
      summary: "Get user tokens for existing users, create new users"
      description: "Get user tokens for existing users, create new users"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "organizationId"
        in: "path"
        description: "Organization ID"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "Provides organization token and user ID"
        required: true
        schema:
          $ref: "#/definitions/UserTokenRequest"
      responses:
        200:
          description: "User has been found, token was returned"
          schema:
            $ref: "#/definitions/UserTokenSuccessfulResponse"
        201:
          description: "User has been created, token was returned"
          schema:
            $ref: "#/definitions/UserTokenSuccessfulResponse"
        400:
          description: "Bad data"
          schema:
            $ref: "#/definitions/UserTokenFailedResponse"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/UserTokenFailedResponse"
  /v1/organizations/{organizationId}/users/{userId}/variables/{variableName}/causes:
    get:
      tags:
      - "correlations"
      summary: "Search user correlations for a given cause"
      description: "Returns average of all correlations and votes for all user cause\
        \ variables for a given cause. If parameter \"include_public\" is used, it\
        \ also returns public correlations. User correlation overwrites or supersedes\
        \ public correlation."
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "organizationId"
        in: "path"
        description: "Organization ID"
        required: true
        type: "integer"
      - name: "userId"
        in: "path"
        description: "User id"
        required: true
        type: "integer"
      - name: "variableName"
        in: "path"
        description: "Effect variable name"
        required: true
        type: "string"
      - name: "organization_token"
        in: "query"
        description: "Organization access token"
        required: true
        type: "string"
      - name: "includePublic"
        in: "query"
        description: "Include public correlations, Can be \"1\" or empty."
        required: false
        type: "string"
      responses:
        200:
          description: "Successful Operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Correlation"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/organizations/{organizationId}/users/{userId}/variables/{variableName}/effects:
    get:
      tags:
      - "correlations"
      summary: "Search user correlations for a given cause"
      description: "Returns average of all correlations and votes for all user cause\
        \ variables for a given effect. If parameter \"include_public\" is used, it\
        \ also returns public correlations. User correlation overwrites or supersedes\
        \ public correlation."
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "organizationId"
        in: "path"
        description: "Organization ID"
        required: true
        type: "integer"
      - name: "userId"
        in: "path"
        description: "User id"
        required: true
        type: "integer"
      - name: "variableName"
        in: "path"
        description: "Cause variable name"
        required: true
        type: "string"
      - name: "organization_token"
        in: "query"
        description: "Organization access token"
        required: true
        type: "string"
      - name: "include_public"
        in: "query"
        description: "Include public correlations, Can be \"1\" or empty."
        required: false
        type: "string"
      responses:
        200:
          description: "Successful Operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CommonResponse"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/pairs:
    get:
      tags:
      - "pairs"
      summary: "Get pairs"
      description: "Pairs cause measurements with effect measurements grouped over\
        \ the duration of action after the onset delay."
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "cause"
        in: "query"
        description: "Original variable name for the explanatory or independent variable"
        required: true
        type: "string"
      - name: "causeSource"
        in: "query"
        description: "Name of data source that the cause measurements should come\
          \ from"
        required: false
        type: "string"
      - name: "causeUnit"
        in: "query"
        description: "Abbreviated name for the unit cause measurements to be returned\
          \ in"
        required: false
        type: "string"
      - name: "delay"
        in: "query"
        description: "Delay before onset of action (in seconds) from the cause variable\
          \ settings."
        required: false
        type: "string"
      - name: "duration"
        in: "query"
        description: "Duration of action (in seconds) from the cause variable settings."
        required: false
        type: "string"
      - name: "effect"
        in: "query"
        description: "Original variable name for the outcome or dependent variable"
        required: true
        type: "string"
      - name: "effectSource"
        in: "query"
        description: "Name of data source that the effectmeasurements should come\
          \ from"
        required: false
        type: "string"
      - name: "effectUnit"
        in: "query"
        description: "Abbreviated name for the unit effect measurements to be returned\
          \ in"
        required: false
        type: "string"
      - name: "endTime"
        in: "query"
        description: "The most recent date (in epoch time) for which we should return\
          \ measurements"
        required: false
        type: "string"
      - name: "startTime"
        in: "query"
        description: "The earliest date (in epoch time) for which we should return\
          \ measurements"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The LIMIT is used to limit the number of results returned. So\
          \ if you have 1000 results, but only want to the first 10, you would set\
          \ this to 10 and offset to 0."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "Now suppose you wanted to show results 11-20. You'd set the\
          \ offset to 10 and the limit to 10."
        required: false
        type: "integer"
      - name: "sort"
        in: "query"
        description: "Sort by given field. If the field is prefixed with `-, it will\
          \ sort in descending order."
        required: false
        type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Pairs"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/pairsCsv:
    get:
      tags:
      - "pairs"
      summary: "Get pairs"
      description: "Pairs cause measurements with effect measurements grouped over\
        \ the duration of action after the onset delay."
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "cause"
        in: "query"
        description: "Original variable name for the explanatory or independent variable"
        required: true
        type: "string"
      - name: "causeSource"
        in: "query"
        description: "Name of data source that the cause measurements should come\
          \ from"
        required: false
        type: "string"
      - name: "causeUnit"
        in: "query"
        description: "Abbreviated name for the unit cause measurements to be returned\
          \ in"
        required: false
        type: "string"
      - name: "delay"
        in: "query"
        description: "Delay before onset of action (in seconds) from the cause variable\
          \ settings."
        required: false
        type: "string"
      - name: "duration"
        in: "query"
        description: "Duration of action (in seconds) from the cause variable settings."
        required: false
        type: "string"
      - name: "effect"
        in: "query"
        description: "Original variable name for the outcome or dependent variable"
        required: true
        type: "string"
      - name: "effectSource"
        in: "query"
        description: "Name of data source that the effectmeasurements should come\
          \ from"
        required: false
        type: "string"
      - name: "effectUnit"
        in: "query"
        description: "Abbreviated name for the unit effect measurements to be returned\
          \ in"
        required: false
        type: "string"
      - name: "endTime"
        in: "query"
        description: "The most recent date (in epoch time) for which we should return\
          \ measurements"
        required: false
        type: "string"
      - name: "startTime"
        in: "query"
        description: "The earliest date (in epoch time) for which we should return\
          \ measurements"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The LIMIT is used to limit the number of results returned. So\
          \ if you have 1000 results, but only want to the first 10, you would set\
          \ this to 10 and offset to 0."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "Now suppose you wanted to show results 11-20. You'd set the\
          \ offset to 10 and the limit to 10."
        required: false
        type: "integer"
      - name: "sort"
        in: "query"
        description: "Sort by given field. If the field is prefixed with `-, it will\
          \ sort in descending order."
        required: false
        type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Pairs"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/public/correlations/search/{search}:
    get:
      tags:
      - "correlations"
      summary: "Get average correlations for variables containing search term"
      description: "Returns the average correlations from all users for all public\
        \ variables that contain the characters in the search query. Returns average\
        \ of all users public variable correlations with a specified cause or effect."
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "search"
        in: "path"
        description: "Name of the variable that you want to know the causes or effects\
          \ of."
        required: true
        type: "string"
      - name: "effectOrCause"
        in: "query"
        description: "Setting this to effect indicates that the searched variable\
          \ is the effect and that the causes of this variable should be returned.\
          \  cause indicates that the searched variable is the cause and the effects\
          \ should be returned."
        required: true
        type: "string"
      responses:
        200:
          description: "Successful Operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Correlation"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/public/variables:
    get:
      tags:
      - "variables"
      summary: "Get public variables"
      description: "This endpoint retrieves an array of all public variables. Public\
        \ variables are things like foods, medications, symptoms, conditions, and\
        \ anything not unique to a particular user. For instance, a telephone number\
        \ or name would not be a public variable."
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Variable"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/public/variables/search/{search}:
    get:
      tags:
      - "variables"
      summary: "Get top 5 PUBLIC variables with the most correlations"
      description: "Get top 5 PUBLIC variables with the most correlations containing\
        \ the entered search characters. For example, search for 'mood' as an effect.\
        \ Since 'Overall Mood' has a lot of correlations with other variables, it\
        \ should be in the autocomplete list.<br>Supported filter parameters:<br><ul><li><b>category</b>\
        \ - Category of Variable</li></ul><br>"
      produces:
      - "application/json"
      parameters:
      - name: "search"
        in: "path"
        description: "Search query can be some fraction of a variable name."
        required: true
        type: "string"
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "categoryName"
        in: "query"
        description: "Filter variables by category name. The variable categories include\
          \ Activity, Causes of Illness, Cognitive Performance, Conditions, Environment,\
          \ Foods, Location, Miscellaneous, Mood, Nutrition, Physical Activity, Physique,\
          \ Sleep, Social Interactions, Symptoms, Treatments, Vital Signs, and Work."
        required: false
        type: "string"
      - name: "source"
        in: "query"
        description: "Specify a data source name to only return variables from a specific\
          \ data source."
        required: false
        type: "string"
      - name: "effectOrCause"
        in: "query"
        description: "Indicate if you only want variables that have user correlations.\
          \  Possible values are effect and cause."
        required: false
        type: "string"
      - name: "publicEffectOrCause"
        in: "query"
        description: "Indicate if you only want variables that have aggregated correlations.\
          \  Possible values are effect and cause."
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The LIMIT is used to limit the number of results returned. So\
          \ if you have 1000 results, but only want to the first 10, you would set\
          \ this to 10 and offset to 0."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "Now suppose you wanted to show results 11-20. You'd set the\
          \ offset to 10 and the limit to 10."
        required: false
        type: "integer"
      - name: "sort"
        in: "query"
        description: "Sort by given field. If the field is prefixed with `-, it will\
          \ sort in descending order."
        required: false
        type: "integer"
      responses:
        200:
          description: "Variables returned"
          schema:
            $ref: "#/definitions/Variable"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/trackingReminderNotifications:
    get:
      tags:
      - "reminders"
      summary: "Get specific pending tracking reminders"
      description: "Specfic pending reminder instances that still need to be tracked.\
        \  "
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "variableCategoryName"
        in: "query"
        description: "Limit tracking reminder notifications to a specific variable\
          \ category"
        required: false
        type: "string"
      - name: "createdAt"
        in: "query"
        description: "When the record was first created. Use ISO 8601 datetime format.\
          \ Time zone should be UTC and not local. "
        required: false
        type: "string"
      - name: "updatedAt"
        in: "query"
        description: "When the record was last updated. Use ISO 8601 datetime format.\
          \ Time zone should be UTC and not local. "
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The LIMIT is used to limit the number of results returned. So\
          \ if you have 1000 results, but only want to the first 10, you would set\
          \ this to 10 and offset to 0. The maximum limit is 200 records."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "OFFSET says to skip that many rows before beginning to return\
          \ rows to the client. OFFSET 0 is the same as omitting the OFFSET clause.\
          \ If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting\
          \ to count the LIMIT rows that are returned."
        required: false
        type: "integer"
      - name: "sort"
        in: "query"
        description: "Sort by given field. If the field is prefixed with '-', it will\
          \ sort in descending order."
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/inline_response_200"
      security:
      - quantimodo_oauth2:
        - "basic"
  /v1/trackingReminderNotifications/skip:
    post:
      tags:
      - "reminders"
      summary: "Skip a pending tracking reminder"
      description: "Deletes the pending tracking reminder"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        description: "Id of the pending reminder to be skipped or deleted"
        required: true
        schema:
          $ref: "#/definitions/TrackingReminderNotificationSkip"
      responses:
        200:
          description: "Successful Operation"
          schema:
            $ref: "#/definitions/CommonResponse"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/trackingReminderNotifications/snooze:
    post:
      tags:
      - "reminders"
      summary: "Snooze a pending tracking reminder"
      description: "Changes the reminder time to now plus one hour"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        description: "Id of the pending reminder to be snoozed"
        required: true
        schema:
          $ref: "#/definitions/TrackingReminderNotificationSnooze"
      responses:
        200:
          description: "Successful Operation"
          schema:
            $ref: "#/definitions/CommonResponse"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/trackingReminderNotifications/track:
    post:
      tags:
      - "reminders"
      summary: "Track a pending tracking reminder"
      description: "Adds the default measurement for the pending tracking reminder\
        \ with the reminder time as the measurment start time"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        description: "Id of the pending reminder to be tracked"
        required: true
        schema:
          $ref: "#/definitions/TrackingReminderNotificationTrack"
      responses:
        200:
          description: "Successful Operation"
          schema:
            $ref: "#/definitions/CommonResponse"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/trackingReminders:
    get:
      tags:
      - "reminders"
      summary: "Get repeating tracking reminder settings"
      description: "Users can be reminded to track certain variables at a specified\
        \ frequency with a default value.  "
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "variableCategoryName"
        in: "query"
        description: "Limit tracking reminders to a specific variable category"
        required: false
        type: "string"
      - name: "createdAt"
        in: "query"
        description: "When the record was first created. Use ISO 8601 datetime format.\
          \ Time zone should be UTC and not local. "
        required: false
        type: "string"
      - name: "updatedAt"
        in: "query"
        description: "When the record was last updated. Use ISO 8601 datetime format.\
          \ Time zone should be UTC and not local. "
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The LIMIT is used to limit the number of results returned. So\
          \ if you have 1000 results, but only want to the first 10, you would set\
          \ this to 10 and offset to 0. The maximum limit is 200 records."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "OFFSET says to skip that many rows before beginning to return\
          \ rows to the client. OFFSET 0 is the same as omitting the OFFSET clause.\
          \ If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting\
          \ to count the LIMIT rows that are returned."
        required: false
        type: "integer"
      - name: "sort"
        in: "query"
        description: "Sort by given field. If the field is prefixed with '-', it will\
          \ sort in descending order."
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/inline_response_200_1"
      security:
      - quantimodo_oauth2:
        - "basic"
    post:
      tags:
      - "reminders"
      summary: "Store a Tracking Reminder"
      description: "This is to enable users to create reminders to track a variable\
        \ with a default value at a specified frequency"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        description: "TrackingReminder that should be stored"
        required: false
        schema:
          $ref: "#/definitions/TrackingReminder"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/inline_response_200_2"
      security:
      - quantimodo_oauth2:
        - "basic"
  /v1/trackingReminders/delete:
    post:
      tags:
      - "reminders"
      summary: "Delete tracking reminder"
      description: "Delete previously created tracking reminder"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        description: "Id of reminder to be deleted"
        required: true
        schema:
          $ref: "#/definitions/TrackingReminderDelete"
      responses:
        200:
          description: "Successful Operation"
          schema:
            $ref: "#/definitions/CommonResponse"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/unitCategories:
    get:
      tags:
      - "units"
      summary: "Get unit categories"
      description: "Get a list of the categories of measurement units such as 'Distance',\
        \ 'Duration', 'Energy', 'Frequency', 'Miscellany', 'Pressure', 'Proportion',\
        \ 'Rating', 'Temperature', 'Volume', and 'Weight'."
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/UnitCategory"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/units:
    get:
      tags:
      - "units"
      summary: "Get all available units"
      description: "Get all available units"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "id"
        in: "query"
        description: "Unit id"
        required: false
        type: "integer"
      - name: "unitName"
        in: "query"
        description: "Unit name"
        required: false
        type: "string"
      - name: "abbreviatedUnitName"
        in: "query"
        description: "Restrict the results to a specific unit by providing the unit\
          \ abbreviation."
        required: false
        type: "string"
      - name: "categoryName"
        in: "query"
        description: "Restrict the results to a specific unit category by providing\
          \ the unit category name."
        required: false
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Unit"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/unitsVariable:
    get:
      tags:
      - "units"
      summary: "Units for Variable"
      description: "Get a list of all possible units to use for a given variable"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "unitName"
        in: "query"
        description: "Name of Unit you want to retrieve"
        required: false
        type: "string"
      - name: "abbreviatedUnitName"
        in: "query"
        description: "Abbreviated Unit Name of the unit you want"
        required: false
        type: "string"
      - name: "categoryName"
        in: "query"
        description: "Name of the category you want units for"
        required: false
        type: "string"
      - name: "variable"
        in: "query"
        description: "Name of the variable you want units for"
        required: false
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Unit"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/user/me:
    get:
      tags:
      - "user"
      summary: "Get all available units for variableGet authenticated user"
      description: "Returns user info for the currently authenticated user."
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/User"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/userTags:
    post:
      tags:
      - "tags"
      summary: "Post or update user tags or ingredients"
      description: "This endpoint allows users to tag foods with their ingredients.\
        \  This information will then be used to infer the user intake of the different\
        \ ingredients by just entering the foods. The inferred intake levels will\
        \ then be used to determine the effects of different nutrients on the user\
        \ during analysis."
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        description: "Contains the new user tag data"
        required: true
        schema:
          $ref: "#/definitions/UserTag"
      responses:
        200:
          description: "Successful Operation"
          schema:
            $ref: "#/definitions/CommonResponse"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/userTags/delete:
    post:
      tags:
      - "tags"
      summary: "Delete user tag or ingredient"
      description: "Delete previously created user tags or ingredients."
      produces:
      - "application/json"
      parameters:
      - name: "taggedVariableId"
        in: "query"
        description: "This is the id of the variable being tagged with an ingredient\
          \ or something."
        required: true
        type: "integer"
      - name: "tagVariableId"
        in: "query"
        description: "This is the id of the ingredient variable whose value is determined\
          \ based on the value of the tagged variable."
        required: true
        type: "integer"
      responses:
        200:
          description: "Successful Operation"
          schema:
            $ref: "#/definitions/CommonResponse"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/userVariables:
    post:
      tags:
      - "variables"
      summary: "Update User Settings for a Variable"
      description: "Users can change the parameters used in analysis of that variable\
        \ such as the expected duration of action for a variable to have an effect,\
        \ the estimated delay before the onset of action. In order to filter out erroneous\
        \ data, they are able to set the maximum and minimum reasonable daily values\
        \ for a variable."
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "userVariables"
        description: "Variable user settings data"
        required: true
        schema:
          $ref: "#/definitions/UserVariables"
      responses:
        200:
          description: "Successful operation"
        400:
          description: "The received JSON was invalid or malformed"
        401:
          description: "Not Authenticated"
        404:
          description: "Unknown target user ID"
      security:
      - oauth2:
        - "basic"
  /v1/variableCategories:
    get:
      tags:
      - "variables"
      summary: "Variable categories"
      description: "The variable categories include Activity, Causes of Illness, Cognitive\
        \ Performance, Conditions, Environment, Foods, Location, Miscellaneous, Mood,\
        \ Nutrition, Physical Activity, Physique, Sleep, Social Interactions, Symptoms,\
        \ Treatments, Vital Signs, and Work."
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VariableCategory"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/variables:
    get:
      tags:
      - "variables"
      summary: "Get variables by the category name"
      description: "Get variables by the category name. <br>Supported filter parameters:<br><ul><li><b>name</b>\
        \ - Original name of the variable (supports exact name match only)</li><li><b>lastUpdated</b>\
        \ - Filter by the last time any of the properties of the variable were changed.\
        \ Uses UTC format \"YYYY-MM-DDThh:mm:ss\"</li><li><b>source</b> - The name\
        \ of the data source that created the variable (supports exact name match\
        \ only). So if you have a client application and you only want variables that\
        \ were last updated by your app, you can include the name of your app here</li><li><b>latestMeasurementTime</b>\
        \ - Filter variables based on the last time a measurement for them was created\
        \ or updated in the UTC format \"YYYY-MM-DDThh:mm:ss\"</li><li><b>numberOfMeasurements</b>\
        \ - Filter variables by the total number of measurements that they have. This\
        \ could be used of you want to filter or sort by popularity.</li><li><b>lastSource</b>\
        \ - Limit variables to those which measurements were last submitted by a specific\
        \ source. So if you have a client application and you only want variables\
        \ that were last updated by your app, you can include the name of your app\
        \ here. (supports exact name match only)</li></ul><br>"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "id"
        in: "query"
        description: "Common variable id"
        required: false
        type: "integer"
      - name: "userId"
        in: "query"
        description: "User id"
        required: false
        type: "integer"
      - name: "category"
        in: "query"
        description: "Filter data by category"
        required: false
        type: "string"
      - name: "name"
        in: "query"
        description: "Original name of the variable (supports exact name match only)"
        required: false
        type: "string"
      - name: "lastUpdated"
        in: "query"
        description: "Filter by the last time any of the properties of the variable\
          \ were changed. Uses UTC format \"YYYY-MM-DDThh:mm:ss\""
        required: false
        type: "string"
      - name: "source"
        in: "query"
        description: "The name of the data source that created the variable (supports\
          \ exact name match only). So if you have a client application and you only\
          \ want variables that were last updated by your app, you can include the\
          \ name of your app here"
        required: false
        type: "string"
      - name: "latestMeasurementTime"
        in: "query"
        description: "Filter variables based on the last time a measurement for them\
          \ was created or updated in the UTC format \"YYYY-MM-DDThh:mm:ss\""
        required: false
        type: "string"
      - name: "numberOfMeasurements"
        in: "query"
        description: "Filter variables by the total number of measurements that they\
          \ have. This could be used of you want to filter or sort by popularity."
        required: false
        type: "string"
      - name: "lastSource"
        in: "query"
        description: "Limit variables to those which measurements were last submitted\
          \ by a specific source. So if you have a client application and you only\
          \ want variables that were last updated by your app, you can include the\
          \ name of your app here. (supports exact name match only)"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The LIMIT is used to limit the number of results returned. So\
          \ if you have 1000 results, but only want to the first 10, you would set\
          \ this to 10 and offset to 0."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "Now suppose you wanted to show results 11-20. You'd set the\
          \ offset to 10 and the limit to 10."
        required: false
        type: "integer"
      - name: "sort"
        in: "query"
        description: "Sort by given field. If the field is prefixed with `-, it will\
          \ sort in descending order."
        required: false
        type: "integer"
      responses:
        200:
          description: "Variables returned"
          schema:
            $ref: "#/definitions/Variable"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
      - basicAuth: []
    post:
      tags:
      - "variables"
      summary: "Create Variables"
      description: "Allows the client to create a new variable in the `variables`\
        \ table."
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        description: "Original name for the variable."
        required: true
        schema:
          $ref: "#/definitions/VariablesNew"
      responses:
        200:
          description: "Successful operation"
        201:
          description: "Variable created"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/variables/search/{search}:
    get:
      tags:
      - "variables"
      summary: "Get variables by search query"
      description: "Get variables containing the search characters for which the currently\
        \ logged in user has measurements. Used to provide auto-complete function\
        \ in variable search boxes."
      produces:
      - "application/json"
      parameters:
      - name: "search"
        in: "path"
        description: "Search query which may be an entire variable name or a fragment\
          \ of one."
        required: true
        type: "string"
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "categoryName"
        in: "query"
        description: "Filter variables by category name. The variable categories include\
          \ Activity, Causes of Illness, Cognitive Performance, Conditions, Environment,\
          \ Foods, Location, Miscellaneous, Mood, Nutrition, Physical Activity, Physique,\
          \ Sleep, Social Interactions, Symptoms, Treatments, Vital Signs, and Work."
        required: false
        type: "string"
      - name: "includePublic"
        in: "query"
        description: "Set to true if you would like to include public variables when\
          \ no user variables are found."
        required: false
        type: "boolean"
      - name: "manualTracking"
        in: "query"
        description: "Set to true if you would like to exlude variables like apps\
          \ and website names."
        required: false
        type: "boolean"
      - name: "source"
        in: "query"
        description: "Specify a data source name to only return variables from a specific\
          \ data source."
        required: false
        type: "string"
      - name: "effectOrCause"
        in: "query"
        description: "Indicate if you only want variables that have user correlations.\
          \  Possible values are effect and cause."
        required: false
        type: "string"
      - name: "publicEffectOrCause"
        in: "query"
        description: "Indicate if you only want variables that have aggregated correlations.\
          \  Possible values are effect and cause."
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The LIMIT is used to limit the number of results returned. So\
          \ if you have 1000 results, but only want to the first 10, you would set\
          \ this to 10 and offset to 0."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "Now suppose you wanted to show results 11-20. You'd set the\
          \ offset to 10 and the limit to 10."
        required: false
        type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Variable"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/variables/{variableName}:
    get:
      tags:
      - "variables"
      summary: "Get info about a variable"
      description: "Get all of the settings and information about a variable by its\
        \ name. If the logged in user has modified the settings for the variable,\
        \ these will be provided instead of the default settings for that variable."
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "variableName"
        in: "path"
        description: "Variable name"
        required: true
        type: "string"
      responses:
        200:
          description: "Variables returned"
          schema:
            $ref: "#/definitions/Variable"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/variables/{variableName}/causes:
    get:
      tags:
      - "correlations"
      summary: "Search user correlations for a given effect"
      description: "Returns average of all correlations and votes for all user cause\
        \ variables for a given effect"
      produces:
      - "application/json"
      parameters:
      - name: "variableName"
        in: "path"
        description: "Effect variable name"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful Operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Correlation"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/variables/{variableName}/effects:
    get:
      tags:
      - "correlations"
      summary: "Search user correlations for a given cause"
      description: "Returns average of all correlations and votes for all user effect\
        \ variables for a given cause"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "variableName"
        in: "path"
        description: "Cause variable name"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful Operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Correlation"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/variables/{variableName}/public/causes:
    get:
      tags:
      - "correlations"
      summary: "Search public correlations for a given effect"
      description: "Returns average of all correlations and votes for all public cause\
        \ variables for a given effect"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "variableName"
        in: "path"
        description: "Effect variable name"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful Operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Correlation"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/variables/{variableName}/public/effects:
    get:
      tags:
      - "correlations"
      summary: "Search public correlations for a given cause"
      description: "Returns average of all correlations and votes for all public cause\
        \ variables for a given cause"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "variableName"
        in: "path"
        description: "Cause variable name"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful Operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Correlation"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/votes:
    post:
      tags:
      - "correlations"
      - "votes"
      summary: "Post or update vote"
      description: "This is to enable users to indicate their opinion on the plausibility\
        \ of a causal relationship between a treatment and outcome. QuantiModo incorporates\
        \ crowd-sourced plausibility estimations into their algorithm. This is done\
        \ allowing user to indicate their view of the plausibility of each relationship\
        \ with thumbs up/down buttons placed next to each prediction."
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        description: "Contains the cause variable, effect variable, and vote value."
        required: true
        schema:
          $ref: "#/definitions/PostVote"
      responses:
        200:
          description: "Successful Operation"
          schema:
            $ref: "#/definitions/CommonResponse"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v1/votes/delete:
    post:
      tags:
      - "correlations"
      - "votes"
      summary: "Delete vote"
      description: "Delete previously posted vote"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        description: "The cause and effect variable names for the predictor vote to\
          \ be deleted."
        required: true
        schema:
          $ref: "#/definitions/VoteDelete"
      responses:
        200:
          description: "Successful Operation"
          schema:
            $ref: "#/definitions/CommonResponse"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v2/application/connections:
    get:
      tags:
      - "application endpoints"
      summary: "Get all Connections"
      description: "Get all Connections"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "Application's OAuth2 access token"
        required: false
        type: "string"
      - name: "connector_id"
        in: "query"
        description: "The id for the connector data source for which the connection\
          \ is connected"
        required: false
        type: "integer"
      - name: "connect_status"
        in: "query"
        description: "Indicates whether a connector is currently connected to a service\
          \ for a user."
        required: false
        type: "string"
      - name: "connect_error"
        in: "query"
        description: "Error message if there is a problem with authorizing this connection."
        required: false
        type: "string"
      - name: "update_requested_at"
        in: "query"
        description: "Time at which an update was requested by a user."
        required: false
        type: "string"
      - name: "update_status"
        in: "query"
        description: "Indicates whether a connector is currently updated."
        required: false
        type: "string"
      - name: "update_error"
        in: "query"
        description: "Indicates if there was an error during the update."
        required: false
        type: "string"
      - name: "last_successful_updated_at"
        in: "query"
        description: "The time at which the connector was last successfully updated."
        required: false
        type: "string"
      - name: "created_at"
        in: "query"
        description: "When the record was first created. Use ISO 8601 datetime format "
        required: false
        type: "string"
      - name: "updated_at"
        in: "query"
        description: "When the record was last updated. Use ISO 8601 datetime format "
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The LIMIT is used to limit the number of results returned. So\
          \ if you have 1000 results, but only want to the first 10, you would set\
          \ this to 10 and offset to 0. The maximum limit is 200 records."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "OFFSET says to skip that many rows before beginning to return\
          \ rows to the client. OFFSET 0 is the same as omitting the OFFSET clause.\
          \ If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting\
          \ to count the LIMIT rows that are returned."
        required: false
        type: "integer"
      - name: "sort"
        in: "query"
        description: "Sort by given field. If the field is prefixed with '-', it will\
          \ sort in descending order."
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/inline_response_200_3"
  /v2/application/credentials:
    get:
      tags:
      - "application endpoints"
      summary: "Get all Credentials"
      description: "Get all Credentials"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "Application's OAuth2 access token"
        required: false
        type: "string"
      - name: "connector_id"
        in: "query"
        description: "The id for the connector data source from which the credential\
          \ was obtained"
        required: false
        type: "integer"
      - name: "attr_key"
        in: "query"
        description: "Attribute name such as token, userid, username, or password"
        required: false
        type: "string"
      - name: "attr_value"
        in: "query"
        description: "Encrypted value for the attribute specified"
        required: false
        type: "string"
      - name: "created_at"
        in: "query"
        description: "When the record was first created. Use ISO 8601 datetime format "
        required: false
        type: "string"
      - name: "updated_at"
        in: "query"
        description: "When the record was last updated. Use ISO 8601 datetime format "
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The LIMIT is used to limit the number of results returned. So\
          \ if you have 1000 results, but only want to the first 10, you would set\
          \ this to 10 and offset to 0. The maximum limit is 200 records."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "OFFSET says to skip that many rows before beginning to return\
          \ rows to the client. OFFSET 0 is the same as omitting the OFFSET clause.\
          \ If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting\
          \ to count the LIMIT rows that are returned."
        required: false
        type: "integer"
      - name: "sort"
        in: "query"
        description: "Sort by given field. If the field is prefixed with '-', it will\
          \ sort in descending order."
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/inline_response_200_4"
  /v2/application/measurements:
    get:
      tags:
      - "application endpoints"
      summary: "Get measurements for all users using your application"
      description: "Measurements are any value that can be recorded like daily steps,\
        \ a mood rating, or apples eaten."
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "Application's OAuth2 access token"
        required: false
        type: "string"
      - name: "client_id"
        in: "query"
        description: "The ID of the client application which originally stored the\
          \ measurement"
        required: false
        type: "string"
      - name: "connector_id"
        in: "query"
        description: "The id for the connector data source from which the measurement\
          \ was obtained"
        required: false
        type: "integer"
      - name: "variable_id"
        in: "query"
        description: "ID of the variable for which we are creating the measurement\
          \ records"
        required: false
        type: "integer"
      - name: "source_id"
        in: "query"
        description: "Application or device used to record the measurement values"
        required: false
        type: "integer"
      - name: "start_time"
        in: "query"
        description: "start time for the measurement event. Use ISO 8601 datetime\
          \ format "
        required: false
        type: "string"
      - name: "value"
        in: "query"
        description: "The value of the measurement after conversion to the default\
          \ unit for that variable"
        required: false
        type: "number"
      - name: "unit_id"
        in: "query"
        description: "The default unit id for the variable"
        required: false
        type: "integer"
      - name: "original_value"
        in: "query"
        description: "Unconverted value of measurement as originally posted (before\
          \ conversion to default unit)"
        required: false
        type: "number"
      - name: "original_unit_id"
        in: "query"
        description: "Unit id of the measurement as originally submitted"
        required: false
        type: "integer"
      - name: "duration"
        in: "query"
        description: "Duration of the event being measurement in seconds"
        required: false
        type: "integer"
      - name: "note"
        in: "query"
        description: "An optional note the user may include with their measurement"
        required: false
        type: "string"
      - name: "latitude"
        in: "query"
        description: "Latitude at which the measurement was taken"
        required: false
        type: "number"
      - name: "longitude"
        in: "query"
        description: "Longitude at which the measurement was taken"
        required: false
        type: "number"
      - name: "location"
        in: "query"
        description: "Optional human readable name for the location where the measurement\
          \ was recorded"
        required: false
        type: "string"
      - name: "created_at"
        in: "query"
        description: "When the record was first created. Use ISO 8601 datetime format "
        required: false
        type: "string"
      - name: "updated_at"
        in: "query"
        description: "When the record was last updated. Use ISO 8601 datetime format "
        required: false
        type: "string"
      - name: "error"
        in: "query"
        description: "An error message if there is a problem with the measurement"
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The LIMIT is used to limit the number of results returned. So\
          \ if you have 1000 results, but only want to the first 10, you would set\
          \ this to 10 and offset to 0. The maximum limit is 200 records."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "OFFSET says to skip that many rows before beginning to return\
          \ rows to the client. OFFSET 0 is the same as omitting the OFFSET clause.\
          \ If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting\
          \ to count the LIMIT rows that are returned."
        required: false
        type: "integer"
      - name: "sort"
        in: "query"
        description: "Sort by given field. If the field is prefixed with '-', it will\
          \ sort in descending order."
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/inline_response_200_5"
  /v2/application/trackingReminders:
    get:
      tags:
      - "application endpoints"
      summary: "Get tracking reminders"
      description: "Get the variable id, frequency, and default value for the user\
        \ tracking reminders "
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "client_id"
        in: "query"
        description: "The ID of the client application which last created or updated\
          \ this trackingReminder"
        required: false
        type: "string"
      - name: "created_at"
        in: "query"
        description: "When the record was first created. Use ISO 8601 datetime format "
        required: false
        type: "string"
      - name: "updated_at"
        in: "query"
        description: "When the record was last updated. Use ISO 8601 datetime format "
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The LIMIT is used to limit the number of results returned. So\
          \ if you have 1000 results, but only want to the first 10, you would set\
          \ this to 10 and offset to 0. The maximum limit is 200 records."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "OFFSET says to skip that many rows before beginning to return\
          \ rows to the client. OFFSET 0 is the same as omitting the OFFSET clause.\
          \ If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting\
          \ to count the LIMIT rows that are returned."
        required: false
        type: "integer"
      - name: "sort"
        in: "query"
        description: "Sort by given field. If the field is prefixed with '-', it will\
          \ sort in descending order."
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/inline_response_200_1"
  /v2/application/updates:
    get:
      tags:
      - "application endpoints"
      summary: "Get all Updates"
      description: "Get all Updates"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "Application's OAuth2 access token"
        required: false
        type: "string"
      - name: "connector_id"
        in: "query"
        description: "connector_id"
        required: false
        type: "integer"
      - name: "number_of_measurements"
        in: "query"
        description: "number_of_measurements"
        required: false
        type: "integer"
      - name: "success"
        in: "query"
        description: "success"
        required: false
        type: "boolean"
      - name: "message"
        in: "query"
        description: "message"
        required: false
        type: "string"
      - name: "created_at"
        in: "query"
        description: "When the record was first created. Use ISO 8601 datetime format "
        required: false
        type: "string"
      - name: "updated_at"
        in: "query"
        description: "When the record was last updated. Use ISO 8601 datetime format "
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The LIMIT is used to limit the number of results returned. So\
          \ if you have 1000 results, but only want to the first 10, you would set\
          \ this to 10 and offset to 0. The maximum limit is 200 records."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "OFFSET says to skip that many rows before beginning to return\
          \ rows to the client. OFFSET 0 is the same as omitting the OFFSET clause.\
          \ If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting\
          \ to count the LIMIT rows that are returned."
        required: false
        type: "integer"
      - name: "sort"
        in: "query"
        description: "Sort by given field. If the field is prefixed with '-', it will\
          \ sort in descending order."
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/inline_response_200_6"
  /v2/application/userVariableRelationships:
    get:
      tags:
      - "application endpoints"
      summary: "Get all UserVariableRelationships"
      description: "Get all UserVariableRelationships"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "id"
        in: "query"
        description: "id"
        required: false
        type: "integer"
      - name: "confidence_level"
        in: "query"
        description: "Our confidence that a consistent predictive relationship exists\
          \ based on the amount of evidence, reproducibility, and other factors"
        required: false
        type: "string"
      - name: "confidence_score"
        in: "query"
        description: "A quantitative representation of our confidence that a consistent\
          \ predictive relationship exists based on the amount of evidence, reproducibility,\
          \ and other factors"
        required: false
        type: "number"
      - name: "direction"
        in: "query"
        description: "Direction is positive if higher predictor values generally precede\
          \ higher outcome values. Direction is negative if higher predictor values\
          \ generally precede lower outcome values."
        required: false
        type: "string"
      - name: "duration_of_action"
        in: "query"
        description: "Estimated number of seconds following the onset delay in which\
          \ a stimulus produces a perceivable effect"
        required: false
        type: "integer"
      - name: "error_message"
        in: "query"
        description: "error_message"
        required: false
        type: "string"
      - name: "onset_delay"
        in: "query"
        description: "Estimated number of seconds that pass before a stimulus produces\
          \ a perceivable effect"
        required: false
        type: "integer"
      - name: "outcome_variable_id"
        in: "query"
        description: "Variable ID for the outcome variable"
        required: false
        type: "integer"
      - name: "predictor_variable_id"
        in: "query"
        description: "Variable ID for the predictor variable"
        required: false
        type: "integer"
      - name: "predictor_unit_id"
        in: "query"
        description: "ID for default unit of the predictor variable"
        required: false
        type: "integer"
      - name: "sinn_rank"
        in: "query"
        description: "A value representative of the relevance of this predictor relative\
          \ to other predictors of this outcome.  Usually used for relevancy sorting."
        required: false
        type: "number"
      - name: "strength_level"
        in: "query"
        description: "Can be weak, medium, or strong based on the size of the effect\
          \ which the predictor appears to have on the outcome relative to other variable\
          \ relationship strength scores."
        required: false
        type: "string"
      - name: "strength_score"
        in: "query"
        description: "A value represented to the size of the effect which the predictor\
          \ appears to have on the outcome."
        required: false
        type: "number"
      - name: "vote"
        in: "query"
        description: "vote"
        required: false
        type: "string"
      - name: "value_predicting_high_outcome"
        in: "query"
        description: "Value for the predictor variable (in it's default unit) which\
          \ typically precedes an above average outcome value"
        required: false
        type: "number"
      - name: "value_predicting_low_outcome"
        in: "query"
        description: "Value for the predictor variable (in it's default unit) which\
          \ typically precedes a below average outcome value"
        required: false
        type: "number"
      - name: "limit"
        in: "query"
        description: "The LIMIT is used to limit the number of results returned. So\
          \ if you have 1000 results, but only want to the first 10, you would set\
          \ this to 10 and offset to 0. The maximum limit is 200 records."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "OFFSET says to skip that many rows before beginning to return\
          \ rows to the client. OFFSET 0 is the same as omitting the OFFSET clause.\
          \ If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting\
          \ to count the LIMIT rows that are returned."
        required: false
        type: "integer"
      - name: "sort"
        in: "query"
        description: "Sort by given field. If the field is prefixed with '-', it will\
          \ sort in descending order."
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/inline_response_200_7"
  /v2/application/userVariables:
    get:
      tags:
      - "application endpoints"
      summary: "Get all UserVariables"
      description: "Get all UserVariables"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "client_id"
        in: "query"
        description: "The ID of the client application which last created or updated\
          \ this user variable"
        required: false
        type: "string"
      - name: "parent_id"
        in: "query"
        description: "ID of the parent variable if this variable has any parent"
        required: false
        type: "integer"
      - name: "variable_id"
        in: "query"
        description: "ID of variable"
        required: false
        type: "integer"
      - name: "default_unit_id"
        in: "query"
        description: "D of unit to use for this variable"
        required: false
        type: "integer"
      - name: "minimum_allowed_value"
        in: "query"
        description: "Minimum reasonable value for this variable (uses default unit)"
        required: false
        type: "number"
      - name: "maximum_allowed_value"
        in: "query"
        description: "Maximum reasonable value for this variable (uses default unit)"
        required: false
        type: "number"
      - name: "filling_value"
        in: "query"
        description: "Value for replacing null measurements"
        required: false
        type: "number"
      - name: "join_with"
        in: "query"
        description: "The Variable this Variable should be joined with. If the variable\
          \ is joined with some other variable then it is not shown to user in the\
          \ list of variables"
        required: false
        type: "integer"
      - name: "onset_delay"
        in: "query"
        description: "Estimated number of seconds that pass before a stimulus produces\
          \ a perceivable effect"
        required: false
        type: "integer"
      - name: "duration_of_action"
        in: "query"
        description: "Estimated duration of time following the onset delay in which\
          \ a stimulus produces a perceivable effect"
        required: false
        type: "integer"
      - name: "variable_category_id"
        in: "query"
        description: "ID of variable category"
        required: false
        type: "integer"
      - name: "updated"
        in: "query"
        description: "updated"
        required: false
        type: "integer"
      - name: "public"
        in: "query"
        description: "Is variable public"
        required: false
        type: "integer"
      - name: "cause_only"
        in: "query"
        description: "A value of 1 indicates that this variable is generally a cause\
          \ in a causal relationship.  An example of a causeOnly variable would be\
          \ a variable such as Cloud Cover which would generally not be influenced\
          \ by the behaviour of the user"
        required: false
        type: "boolean"
      - name: "filling_type"
        in: "query"
        description: "0 -> No filling, 1 -> Use filling-value"
        required: false
        type: "string"
      - name: "number_of_measurements"
        in: "query"
        description: "Number of measurements"
        required: false
        type: "integer"
      - name: "number_of_processed_measurements"
        in: "query"
        description: "Number of processed measurements"
        required: false
        type: "integer"
      - name: "measurements_at_last_analysis"
        in: "query"
        description: "Number of measurements at last analysis"
        required: false
        type: "integer"
      - name: "last_unit_id"
        in: "query"
        description: "ID of last Unit"
        required: false
        type: "integer"
      - name: "last_original_unit_id"
        in: "query"
        description: "ID of last original Unit"
        required: false
        type: "integer"
      - name: "last_original_value"
        in: "query"
        description: "Last original value which is stored"
        required: false
        type: "integer"
      - name: "last_value"
        in: "query"
        description: "Last Value"
        required: false
        type: "number"
      - name: "last_source_id"
        in: "query"
        description: "ID of last source"
        required: false
        type: "integer"
      - name: "number_of_correlations"
        in: "query"
        description: "Number of correlations for this variable"
        required: false
        type: "integer"
      - name: "status"
        in: "query"
        description: "status"
        required: false
        type: "string"
      - name: "error_message"
        in: "query"
        description: "error_message"
        required: false
        type: "string"
      - name: "last_successful_update_time"
        in: "query"
        description: "When this variable or its settings were last updated"
        required: false
        type: "string"
      - name: "standard_deviation"
        in: "query"
        description: "Standard deviation"
        required: false
        type: "number"
      - name: "variance"
        in: "query"
        description: "Variance"
        required: false
        type: "number"
      - name: "minimum_recorded_value"
        in: "query"
        description: "Minimum recorded value of this variable"
        required: false
        type: "number"
      - name: "maximum_recorded_value"
        in: "query"
        description: "Maximum recorded value of this variable"
        required: false
        type: "number"
      - name: "mean"
        in: "query"
        description: "Mean"
        required: false
        type: "number"
      - name: "median"
        in: "query"
        description: "Median"
        required: false
        type: "number"
      - name: "most_common_unit_id"
        in: "query"
        description: "Most common Unit ID"
        required: false
        type: "integer"
      - name: "most_common_value"
        in: "query"
        description: "Most common value"
        required: false
        type: "number"
      - name: "number_of_unique_daily_values"
        in: "query"
        description: "Number of unique daily values"
        required: false
        type: "number"
      - name: "number_of_changes"
        in: "query"
        description: "Number of changes"
        required: false
        type: "integer"
      - name: "skewness"
        in: "query"
        description: "Skewness"
        required: false
        type: "number"
      - name: "kurtosis"
        in: "query"
        description: "Kurtosis"
        required: false
        type: "number"
      - name: "latitude"
        in: "query"
        description: "Latitude"
        required: false
        type: "number"
      - name: "longitude"
        in: "query"
        description: "Longitude"
        required: false
        type: "number"
      - name: "location"
        in: "query"
        description: "Location"
        required: false
        type: "string"
      - name: "created_at"
        in: "query"
        description: "When the record was first created. Use ISO 8601 datetime format "
        required: false
        type: "string"
      - name: "updated_at"
        in: "query"
        description: "When the record was last updated. Use ISO 8601 datetime format "
        required: false
        type: "string"
      - name: "outcome"
        in: "query"
        description: "Outcome variables (those with `outcome` == 1) are variables\
          \ for which a human would generally want to identify the influencing factors.\
          \  These include symptoms of illness, physique, mood, cognitive performance,\
          \ etc.  Generally correlation calculations are only performed on outcome\
          \ variables"
        required: false
        type: "boolean"
      - name: "sources"
        in: "query"
        description: "Comma-separated list of source names to limit variables to those\
          \ sources"
        required: false
        type: "string"
      - name: "earliest_source_time"
        in: "query"
        description: "Earliest source time"
        required: false
        type: "integer"
      - name: "latest_source_time"
        in: "query"
        description: "Latest source time"
        required: false
        type: "integer"
      - name: "earliest_measurement_time"
        in: "query"
        description: "Earliest measurement time"
        required: false
        type: "integer"
      - name: "latest_measurement_time"
        in: "query"
        description: "Latest measurement time"
        required: false
        type: "integer"
      - name: "earliest_filling_time"
        in: "query"
        description: "Earliest filling time"
        required: false
        type: "integer"
      - name: "latest_filling_time"
        in: "query"
        description: "Latest filling time"
        required: false
        type: "integer"
      - name: "limit"
        in: "query"
        description: "The LIMIT is used to limit the number of results returned. So\
          \ if you have 1000 results, but only want to the first 10, you would set\
          \ this to 10 and offset to 0. The maximum limit is 200 records."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "OFFSET says to skip that many rows before beginning to return\
          \ rows to the client. OFFSET 0 is the same as omitting the OFFSET clause.\
          \ If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting\
          \ to count the LIMIT rows that are returned."
        required: false
        type: "integer"
      - name: "sort"
        in: "query"
        description: "Sort by given field. If the field is prefixed with '-', it will\
          \ sort in descending order."
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/inline_response_200_8"
  /v2/application/variableUserSources:
    get:
      tags:
      - "application endpoints"
      summary: "Get all VariableUserSources"
      description: "Get all VariableUserSources"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "variable_id"
        in: "query"
        description: "ID of variable"
        required: false
        type: "integer"
      - name: "timestamp"
        in: "query"
        description: "Time that this measurement occurred Uses epoch minute (epoch\
          \ time divided by 60)"
        required: false
        type: "integer"
      - name: "earliest_measurement_time"
        in: "query"
        description: "Earliest measurement time"
        required: false
        type: "integer"
      - name: "latest_measurement_time"
        in: "query"
        description: "Latest measurement time"
        required: false
        type: "integer"
      - name: "created_at"
        in: "query"
        description: "When the record was first created. Use ISO 8601 datetime format "
        required: false
        type: "string"
      - name: "updated_at"
        in: "query"
        description: "When the record was last updated. Use ISO 8601 datetime format "
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The LIMIT is used to limit the number of results returned. So\
          \ if you have 1000 results, but only want to the first 10, you would set\
          \ this to 10 and offset to 0. The maximum limit is 200 records."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "OFFSET says to skip that many rows before beginning to return\
          \ rows to the client. OFFSET 0 is the same as omitting the OFFSET clause.\
          \ If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting\
          \ to count the LIMIT rows that are returned."
        required: false
        type: "integer"
      - name: "sort"
        in: "query"
        description: "Sort by given field. If the field is prefixed with '-', it will\
          \ sort in descending order."
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/inline_response_200_9"
  /v2/application/votes:
    get:
      tags:
      - "application endpoints"
      summary: "Get all Votes"
      description: "Get all Votes"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "client_id"
        in: "query"
        description: "The ID of the client application which last created or updated\
          \ this vote"
        required: false
        type: "string"
      - name: "cause_id"
        in: "query"
        description: "ID of predictor variable"
        required: false
        type: "integer"
      - name: "effect_id"
        in: "query"
        description: "ID of outcome variable"
        required: false
        type: "integer"
      - name: "value"
        in: "query"
        description: "Value of Vote. 1 is for upvote. 0 is for downvote.  Otherwise,\
          \ there is no vote."
        required: false
        type: "integer"
      - name: "created_at"
        in: "query"
        description: "When the record was first created. Use ISO 8601 datetime format "
        required: false
        type: "string"
      - name: "updated_at"
        in: "query"
        description: "When the record was last updated. Use ISO 8601 datetime format "
        required: false
        type: "string"
      - name: "limit"
        in: "query"
        description: "The LIMIT is used to limit the number of results returned. So\
          \ if you have 1000 results, but only want to the first 10, you would set\
          \ this to 10 and offset to 0. The maximum limit is 200 records."
        required: false
        type: "integer"
      - name: "offset"
        in: "query"
        description: "OFFSET says to skip that many rows before beginning to return\
          \ rows to the client. OFFSET 0 is the same as omitting the OFFSET clause.\
          \ If both OFFSET and LIMIT appear, then OFFSET rows are skipped before starting\
          \ to count the LIMIT rows that are returned."
        required: false
        type: "integer"
      - name: "sort"
        in: "query"
        description: "Sort by given field. If the field is prefixed with '-', it will\
          \ sort in descending order."
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/inline_response_200_10"
  /v2/auth/social/authorizeCode:
    get:
      tags:
      - "authentication"
      summary: "Second Step in Social Authentication flow with JWT Token"
      description: " Here is the flow for how social authentication works with a JWT\
        \ Token\n\n1.**Client:** The client needs to open popup with social auth url\
        \ (`https://app/quantimo.do/api/v2/auth/social/login?provider={provider}&redirectUrl={url}`)\
        \ of server with `provider` and `redirectUrl`. (Url should be registered with\
        \ our social apps. Facebook and Twitter are fine with any redirect url with\
        \ the same domain base url but Google needs exact redirect url.)\n\n\n2.**Server:**\
        \ The QM server will redirect user to that provider to get access.\n\n\n3.**Client:**\
        \ After successful or failed authentication, it will be redirected to given\
        \ `redirectUrl` with code or error.\n\n\n4.**Client:** The client needs to\
        \ get that code and needs to send an Ajax request to server at `https://app.quantimo.do/api/v2/auth/social/authorizeCode?provider={provider}&code={authorizationCode}`\n\
        \n\n5.**Server:** The QM server will authorize that code from the social connection\
        \ and will authenticate user and will retrieve user info.\n\n\n6.**Server:**\
        \ The QM server will try to find existing user by unique identity. If the\
        \ user already exists then it will login. Otherwise, it will create new user\
        \ and will then login.\n\n\n7.**Server:** Once user is found/created, it will\
        \ return a JWT token for that user in the response."
      produces:
      - "application/json"
      parameters:
      - name: "code"
        in: "query"
        description: "Authorization code obtained from the provider."
        required: true
        type: "string"
      - name: "provider"
        in: "query"
        description: "The current options are `google` and `facebook`."
        required: true
        type: "string"
      responses:
        200:
          description: "Successful Operation"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v2/auth/social/authorizeToken:
    get:
      tags:
      - "authentication"
      summary: "Native Social Authentication"
      description: "     \nIf you are using native authentication via Facebook or\
        \ Google SDKs then you should use the following flow.\n\n\n1.**Client:** Using\
        \ native authentication via your native mobile app, get an access token using\
        \ the instructions provided by the Facebook SDK (https://developers.facebook.com/docs/facebook-login)\
        \ or Google (https://developers.google.com/identity/protocols/OAuth2)\n\n\n\
        2.**Client:** Send an Ajax request with provider name and access token on\
        \ `https://app.quantimo.do/api/v2/auth/social/authorizeToken?provider={provider}&accessToken={accessToken}&refreshToken={refreshToken}`\
        \ (`refreshToken` is optional)\n\n\n3.**Server:** Server will try to get user\
        \ info and will find existing user by unique identity. If user exist then\
        \ it will do a login for that or it will create new user and will do login\n\
        \n\n4.**Server:** Once user is found/created, it will return a JWT token for\
        \ that user in response\n\n\n5.**Client:** After getting the JWT token to\
        \ get a QM access token follow these steps and include your JWT token in them\
        \ as a header (Authorization: Bearer **{yourJWThere}**) or as a url parameter\
        \ (https://app.quantimo.do/api/v2/oauth/authorize?token={yourJWThere}). "
      produces:
      - "application/json"
      parameters:
      - name: "refreshToken"
        in: "query"
        description: "Optional refresh token obtained from Google or FB native SDK"
        required: false
        type: "string"
      - name: "accessToken"
        in: "query"
        description: "User's OAuth2 access token obtained from Google or FB native\
          \ SDK"
        required: true
        type: "string"
      - name: "provider"
        in: "query"
        description: "The current options are `google` and `facebook`."
        required: true
        type: "string"
      responses:
        200:
          description: "Successful Operation"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v2/auth/social/login:
    get:
      tags:
      - "authentication"
      summary: "First Setp in Social Authentication flow with JWT Token"
      description: " Here is the flow for how social authentication works with a JWT\
        \ Token\n\n1.**Client:** The client needs to open popup with social auth url\
        \ (`https://app/quantimo.do/api/v2/auth/social/login?provider={provider}&redirectUrl={url}`)\
        \ of server with `provider` and `redirectUrl`. (Url should be registered with\
        \ our social apps. Facebook and Twitter are fine with any redirect url with\
        \ the same domain base url but Google needs exact redirect url.)\n\n\n2.**Server:**\
        \ The QM server will redirect user to that provider to get access.\n\n\n3.**Client:**\
        \ After successful or failed authentication, it will be redirected to given\
        \ `redirectUrl` with code or error.\n\n\n4.**Client:** The client needs to\
        \ get that code and needs to send an Ajax request to server at `https://app.quantimo.do/api/v2/auth/social/authorizeCode?provider={provider}&code={authorizationCode}`\n\
        \n\n5.**Server:** The QM server will authorize that code from the social connection\
        \ and will authenticate user and will retrieve user info.\n\n\n6.**Server:**\
        \ The QM server will try to find existing user by unique identity. If the\
        \ user already exists then it will login. Otherwise, it will create new user\
        \ and will then login.\n\n\n7.**Server:** Once user is found/created, it will\
        \ return a JWT token for that user in the response."
      produces:
      - "application/json"
      parameters:
      - name: "redirectUrl"
        in: "query"
        description: "The redirect URI is the URL within your client application that\
          \ will receive the OAuth2 credentials. Url should be registered with our\
          \ social apps. Facebook and Twitter are fine with any redirect url with\
          \ the same domain base url but Google needs exact redirect url."
        required: true
        type: "string"
      - name: "provider"
        in: "query"
        description: "The current options are `google` and `facebook`."
        required: true
        type: "string"
      responses:
        200:
          description: "Successful Operation"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v2/measurements/csv:
    get:
      tags:
      - "measurements"
      summary: "Get Measurements CSV"
      description: "Download a CSV containing all user measurements"
      produces:
      - "text/csv"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "file"
      security:
      - quantimodo_oauth2:
        - "basic"
  /v2/measurements/request_csv:
    post:
      tags:
      - "measurements"
      summary: "Post Request for Measurements CSV"
      description: "Use this endpoint to schedule a CSV export containing all user\
        \ measurements to be emailed to the user within 24 hours."
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "integer"
      security:
      - quantimodo_oauth2:
        - "basic"
  /v2/measurements/request_pdf:
    post:
      tags:
      - "measurements"
      summary: "Post Request for Measurements PDF"
      description: "Use this endpoint to schedule a PDF export containing all user\
        \ measurements to be emailed to the user within 24 hours."
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "integer"
      security:
      - quantimodo_oauth2:
        - "basic"
  /v2/measurements/request_xls:
    post:
      tags:
      - "measurements"
      summary: "Post Request for Measurements XLS"
      description: "Use this endpoint to schedule a XLS export containing all user\
        \ measurements to be emailed to the user within 24 hours."
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "integer"
      security:
      - quantimodo_oauth2:
        - "basic"
  /v2/measurements/{id}:
    get:
      tags:
      - "measurements"
      summary: "Get Measurement"
      description: "Get Measurement"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "id"
        in: "path"
        description: "id of Measurement"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/inline_response_200_11"
      security:
      - quantimodo_oauth2:
        - "basic"
    put:
      tags:
      - "measurements"
      summary: "Update Measurement"
      description: "Update Measurement"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "id"
        in: "path"
        description: "id of Measurement"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "Measurement that should be updated"
        required: false
        schema:
          $ref: "#/definitions/Measurement"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/inline_response_200_12"
      security:
      - quantimodo_oauth2:
        - "basic"
    delete:
      tags:
      - "measurements"
      summary: "Delete Measurement"
      description: "Delete Measurement"
      produces:
      - "application/json"
      parameters:
      - name: "access_token"
        in: "query"
        description: "User's OAuth2 access token"
        required: false
        type: "string"
      - name: "id"
        in: "path"
        description: "id of Measurement"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/inline_response_200_12"
      security:
      - quantimodo_oauth2:
        - "basic"
  /v2/oauth/authorize:
    get:
      tags:
      - "authentication"
      summary: "Request Authorization Code"
      description: "You can implement OAuth2 authentication to your application using\
        \ our **OAuth2** endpoints.  You need to redirect users to `/api/v2/oauth/authorize`\
        \ endpoint to get an authorization code and include the parameters below.\
        \   This page will ask the user if they want to allow a client's application\
        \ to submit or obtain data from their QM account. It will redirect the user\
        \ to the url provided by the client application with the code as a query parameter\
        \ or error in case of an error.\n\n\n\n\nSee the /api/v2/oauth/access_token\
        \ endpoint for the next steps."
      produces:
      - "application/json"
      parameters:
      - name: "clientId"
        in: "query"
        description: "This is the unique ID that QuantiModo uses to identify your\
          \ application. Obtain a client id by creating a free application at [https://admin.quantimo.do](https://admin.quantimo.do)."
        required: true
        type: "string"
      - name: "client_secret"
        in: "query"
        description: "This is the secret for your obtained clientId. QuantiModo uses\
          \ this to validate that only your application uses the clientId.  Obtain\
          \ this by creating a free application at [https://admin.quantimo.do](https://admin.quantimo.do)."
        required: true
        type: "string"
      - name: "response_type"
        in: "query"
        description: "If the value is code, launches a Basic flow, requiring a POST\
          \ to the token endpoint to obtain the tokens. If the value is token id_token\
          \ or id_token token, launches an Implicit flow, requiring the use of Javascript\
          \ at the redirect URI to retrieve tokens from the URI #fragment."
        required: true
        type: "string"
      - name: "scope"
        in: "query"
        description: "Scopes include basic, readmeasurements, and writemeasurements.\
          \ The \"basic\" scope allows you to read user info (displayname, email,\
          \ etc). The \"readmeasurements\" scope allows one to read a user's data.\
          \ The \"writemeasurements\" scope allows you to write user data. Separate\
          \ multiple scopes by a space."
        required: true
        type: "string"
      - name: "redirect_uri"
        in: "query"
        description: "The redirect URI is the URL within your client application that\
          \ will receive the OAuth2 credentials."
        required: false
        type: "string"
      - name: "state"
        in: "query"
        description: "An opaque string that is round-tripped in the protocol; that\
          \ is to say, it is returned as a URI parameter in the Basic flow, and in\
          \ the URI"
        required: false
        type: "string"
      responses:
        200:
          description: "Successful Operation"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
  /v2/oauth2/access_token:
    get:
      tags:
      - "authentication"
      summary: "Get a user access token"
      description: "Client provides authorization token obtained from /api/v1/oauth2/authorize\
        \ to this endpoint and receives an access token. Access token can then be\
        \ used to query different API endpoints of QuantiModo.\n### Request Access\
        \ Token\nAfter user approves your access to the given scope form the https:/app.quantimo.do/v2/oauth2/authorize\
        \ endpoint, you'll recevive an authorization code to request an access token.\
        \ This time make a `POST` request to `/api/v2/oauth/access_token` with parameters\
        \ including:\n* `grant_type` Can be `authorization_code` or `refresh_token`\
        \ since we are getting the `access_token` for the first time we don't have\
        \ a `refresh_token` so this must be `authorization_code`.\n* `code` Authorization\
        \ code you received with the previous request.\n* `redirect_uri` Your application's\
        \ redirect url.\n\n\n\n\n\n\n\n\n### Refreshing Access Token\nAccess tokens\
        \ expire at some point, to continue using our api you need to refresh them\
        \ with `refresh_token` you received along with the `access_token`. To do this\
        \ make a `POST` request to `/api/v2/oauth/access_token` with correct parameters,\
        \ which are:\n* `grant_type` This time grant type must be `refresh_token`\
        \ since we have it.\n* `clientId` Your application's client id.\n* `client_secret`\
        \ Your application's client secret.\n* `refresh_token` The refresh token you\
        \ received with the `access_token`.\nEvery request you make to this endpoint\
        \ will give you a new refresh token and make the old one expired. So you can\
        \ keep getting new access tokens with new refresh tokens.\n### Using Access\
        \ Token\nCurrently we support 2 ways for this, you can't use both at the same\
        \ time.\n* Adding access token to the request header as `Authorization: Bearer\
        \ {access_token}`\n* Adding to the url as a query parameter `?access_token={access_token}`\n\
        \n\n\n\n\n\n\n\nYou can read more about OAuth2 from [here](http://oauth.net/2/)"
      produces:
      - "application/json"
      parameters:
      - name: "clientId"
        in: "query"
        description: "This is the unique ID that QuantiModo uses to identify your\
          \ application. Obtain a client id by emailing info@quantimo.do."
        required: true
        type: "string"
      - name: "client_secret"
        in: "query"
        description: "This is the secret for your obtained clientId. QuantiModo uses\
          \ this to validate that only your application uses the clientId."
        required: true
        type: "string"
      - name: "grant_type"
        in: "query"
        description: "Grant Type can be 'authorization_code' or 'refresh_token'"
        required: true
        type: "string"
      - name: "code"
        in: "query"
        description: "Authorization code you received with the previous request."
        required: true
        type: "string"
      - name: "response_type"
        in: "query"
        description: "If the value is code, launches a Basic flow, requiring a POST\
          \ to the token endpoint to obtain the tokens. If the value is token id_token\
          \ or id_token token, launches an Implicit flow, requiring the use of Javascript\
          \ at the redirect URI to retrieve tokens from the URI #fragment."
        required: false
        type: "string"
      - name: "scope"
        in: "query"
        description: "Scopes include basic, readmeasurements, and writemeasurements.\
          \ The \"basic\" scope allows you to read user info (displayname, email,\
          \ etc). The \"readmeasurements\" scope allows one to read a user's data.\
          \ The \"writemeasurements\" scope allows you to write user data. Separate\
          \ multiple scopes by a space."
        required: false
        type: "string"
      - name: "redirect_uri"
        in: "query"
        description: "The redirect URI is the URL within your client application that\
          \ will receive the OAuth2 credentials."
        required: false
        type: "string"
      - name: "state"
        in: "query"
        description: "An opaque string that is round-tripped in the protocol; that\
          \ is to say, it is returned as a URI parameter in the Basic flow, and in\
          \ the URI"
        required: false
        type: "string"
      responses:
        200:
          description: "Successful Operation"
        401:
          description: "Not Authenticated"
      security:
      - oauth2:
        - "basic"
securityDefinitions:
  oauth2:
    type: "oauth2"
    authorizationUrl: "https://app.quantimo.do/api/v1/oauth2/authorize"
    flow: "implicit"
    scopes:
      basic: "Basic authentication"
      readmeasurements: "Grants read access to measurements and variables. Allows\
        \ the client app to obtain the user's data."
      writemeasurements: "Grants write access to measurements and variables. Allows\
        \ the client app to store user data."
  quantimodo_oauth2:
    type: "oauth2"
    authorizationUrl: "/api/v2/oauth/authorize"
    tokenUrl: "/api/v2/oauth/access_token"
    flow: "accessCode"
    scopes:
      basic: "allows you to read user info (displayname, email, etc)."
      readmeasurements: "allows one to read a user's data"
      writemeasurements: "allows you to write user data"
  basicAuth:
    description: "HTTP Basic Authentication. Works over `HTTPS`"
    type: "basic"
  internalApiKey:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  CommonResponse:
    type: "object"
    required:
    - "status"
    - "success"
    properties:
      status:
        type: "integer"
        description: "Status code"
      message:
        type: "string"
        description: "Message"
      success:
        type: "boolean"
  HumanTime:
    type: "object"
    properties:
      date:
        type: "string"
        description: "date time"
      timezone_type:
        type: "integer"
      timezone:
        type: "string"
        description: "timezone of date time"
  ConnectorInstruction:
    properties:
      url:
        type: "string"
        description: "url"
      parameters:
        type: "array"
        description: "parameters array"
        items:
          type: "string"
      usePopup:
        type: "boolean"
        description: "usePopup"
  Connector:
    required:
    - "connectInstructions"
    - "connected"
    - "displayName"
    - "getItUrl"
    - "id"
    - "image"
    - "lastUpdate"
    - "name"
    - "noDataYet"
    - "totalMeasurementsInLastUpdate"
    properties:
      id:
        type: "integer"
        description: "Connector ID number"
      name:
        type: "string"
        description: "Connector lowercase system name"
      displayName:
        type: "string"
        description: "Connector pretty display name"
      image:
        type: "string"
        description: "URL to the image of the connector logo"
      getItUrl:
        type: "string"
        description: "URL to a site where one can get this device or application"
      connected:
        type: "string"
        description: "True if the authenticated user has this connector enabled"
      connectInstructions:
        type: "string"
        description: "URL and parameters used when connecting to a service"
      lastUpdate:
        type: "integer"
        description: "Epoch timestamp of last sync"
      totalMeasurementsInLastUpdate:
        type: "integer"
        description: "Number of measurements obtained during latest update"
      noDataYet:
        type: "boolean"
        description: "True if user has no measurements for this connector"
  ConnectorInfo:
    required:
    - "connected"
    - "error"
    - "history"
    - "id"
    properties:
      id:
        type: "integer"
        description: "Connector ID number"
      connected:
        type: "boolean"
        description: "True if the authenticated user has this connector enabled"
      error:
        type: "string"
        description: "Error message. Empty if connected."
      history:
        type: "array"
        items:
          $ref: "#/definitions/ConnectorInfoHistoryItem"
  ConnectorInfoHistoryItem:
    required:
    - "createdAt"
    - "message"
    - "numberOfMeasurements"
    - "success"
    properties:
      numberOfMeasurements:
        type: "integer"
        description: "Number of measurements"
      success:
        type: "boolean"
        description: "True if the update was successfull"
      message:
        type: "string"
        description: "Error message."
      createdAt:
        type: "string"
        description: "Date and time of the update in UTC time zone"
  ConversionStep:
    required:
    - "operation"
    - "value"
    properties:
      operation:
        type: "string"
        description: "ADD or MULTIPLY"
        enum:
        - "MULTIPLY"
        - "ADD"
      value:
        type: "number"
        format: "double"
        description: "This specifies the order of conversion steps starting with 0"
  Correlation:
    required:
    - "cause"
    - "correlationCoefficient"
    - "durationOfAction"
    - "effect"
    - "numberOfPairs"
    - "onsetDelay"
    - "timestamp"
    properties:
      correlationCoefficient:
        type: "number"
        description: "Pearson correlation coefficient between cause and effect measurements"
      cause:
        type: "string"
        description: "ORIGINAL variable name of the cause variable for which the user\
          \ desires correlations."
      originalCause:
        type: "string"
        description: "original name of the cause."
      effect:
        type: "string"
        description: "ORIGINAL variable name of the effect variable for which the\
          \ user desires correlations."
      originalEffect:
        type: "string"
        description: "effect variable original name."
      onsetDelay:
        type: "number"
        format: "double"
        description: "User estimated or default time after cause measurement before\
          \ a perceivable effect is observed"
      durationOfAction:
        type: "number"
        description: "Time over which the cause is expected to produce a perceivable\
          \ effect following the onset delay"
      numberOfPairs:
        type: "number"
        description: "Number of points that went into the correlation calculation"
      effectSize:
        type: "string"
        description: "Magnitude of the effects of a cause indicating whether it's\
          \ practically meaningful."
      statisticalSignificance:
        type: "string"
        description: "A function of the effect size and sample size"
      timestamp:
        type: "number"
        description: "Time at which correlation was calculated"
      reverseCorrelation:
        type: "number"
        description: "Correlation when cause and effect are reversed. For any causal\
          \ relationship, the forward correlation should exceed the reverse correlation."
      causalityFactor:
        type: "number"
        description: ""
      causeCategory:
        type: "string"
        description: "Variable category of the cause variable."
      effectCategory:
        type: "string"
        description: "Variable category of the effect variable."
      valuePredictingHighOutcome:
        type: "number"
        description: "cause value that predicts an above average effect value (in\
          \ default unit for cause variable)"
      valuePredictingLowOutcome:
        type: "number"
        description: "cause value that predicts a below average effect value (in default\
          \ unit for cause variable)"
      optimalPearsonProduct:
        type: "number"
        description: "Optimal Pearson Product"
      averageVote:
        type: "number"
        description: "Average Vote"
      userVote:
        type: "number"
        description: "User Vote"
      causeUnit:
        type: "string"
        description: "Unit of the predictor variable"
      causeUnitId:
        type: "integer"
        description: "Unit Id of the predictor variable"
  JsonErrorResponse:
    required:
    - "status"
    properties:
      status:
        type: "string"
        description: "Status: \"ok\" or \"error\""
      message:
        type: "string"
        description: "Error message"
  MeasurementSet:
    required:
    - "abbreviatedUnitName"
    - "measurements"
    - "sourceName"
    - "variableName"
    properties:
      measurements:
        type: "array"
        description: "Array of timestamps, values, and optional notes"
        items:
          $ref: "#/definitions/ValueObject"
      variableName:
        type: "string"
        description: "ORIGINAL name of the variable for which we are creating the\
          \ measurement records"
      sourceName:
        type: "string"
        description: "Name of the application or device used to record the measurement\
          \ values"
      variableCategoryName:
        type: "string"
        description: "Variable category name"
      combinationOperation:
        type: "string"
        description: "Way to aggregate measurements over time. Options are \"MEAN\"\
          \ or \"SUM\".  SUM should be used for things like minutes of exercise. \
          \ If you use MEAN for exercise, then a person might exercise more minutes\
          \ in one day but add separate measurements that were smaller.  So when we\
          \ are doing correlational analysis, we would think that the person exercised\
          \ less that day even though they exercised more.  Conversely, we must use\
          \ MEAN for things such as ratings which cannot be SUMMED."
        enum:
        - "MEAN"
        - "SUM"
      abbreviatedUnitName:
        type: "string"
        description: "Unit of measurement"
  Measurement:
    required:
    - "source"
    - "startTime"
    - "unit"
    - "value"
    - "variable"
    properties:
      variable:
        type: "string"
        description: "ORIGINAL Name of the variable for which we are creating the\
          \ measurement records"
      source:
        type: "string"
        description: "Application or device used to record the measurement values"
      startTime:
        type: "string"
        description: "Start Time for the measurement event in ISO 8601"
      humanTime:
        description: "Start Time for the measurement event in ISO 8601"
        $ref: "#/definitions/HumanTime"
      value:
        type: "number"
        format: "double"
        description: "Converted measurement value in requested unit"
      unit:
        type: "string"
        description: "Unit of measurement as requested in GET request"
      originalValue:
        type: "integer"
        description: "Original value"
      storedValue:
        type: "number"
        format: "double"
        description: "Measurement value in the unit as orignally submitted"
      storedAbbreviatedUnitName:
        type: "string"
        description: "Unit of measurement as originally submitted"
      originalAbbreviatedUnitName:
        type: "string"
        description: "Original Unit of measurement as originally submitted"
      abbreviatedUnitName:
        type: "string"
        description: "Unit of measurement as originally submitted"
      note:
        type: "string"
        description: "Note of measurement"
  MeasurementDelete:
    required:
    - "startTime"
    - "variableId"
    properties:
      variableId:
        type: "integer"
        description: "Variable id of the measurement to be deleted"
      startTime:
        type: "integer"
        description: "Start time of the measurement to be deleted"
  MeasurementRange:
    required:
    - "lowerLimit"
    properties:
      lowerLimit:
        type: "integer"
        description: "The timestamp of the earliest measurement for a user."
      upperLimit:
        type: "integer"
        description: "The timestamp of the most recent measurement for a user."
  MeasurementSource:
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "Name of the application or device."
  Pairs:
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "Category name"
  Permission:
    required:
    - "maxTimeOfDay"
    - "maxTimestamp"
    - "minTimeOfDay"
    - "minTimestamp"
    - "target"
    - "variableName"
    - "week"
    properties:
      target:
        type: "integer"
        description: "Grant permission to target user or public so they may access\
          \ measurements within the given parameters. TODO: Rename target to something\
          \ more intuitive."
      variableName:
        type: "string"
        description: "ORIGINAL Variable name"
      minTimestamp:
        type: "integer"
        description: "Earliest time when measurements will be accessible in epoch\
          \ seconds"
      maxTimestamp:
        type: "integer"
        description: "Latest time when measurements will be accessible in epoch seconds"
      minTimeOfDay:
        type: "integer"
        description: "Earliest time of day when measurements will be accessible in\
          \ epoch seconds"
      maxTimeOfDay:
        type: "integer"
        description: "Latest time of day when measurements will be accessible in epoch\
          \ seconds"
      week:
        type: "string"
        description: "Maybe specifies if only weekday measurements should be accessible"
  PostVote:
    required:
    - "cause"
    - "effect"
    - "vote"
    properties:
      cause:
        type: "string"
        description: "Cause variable name"
      effect:
        type: "string"
        description: "Effect variable name"
      vote:
        type: "boolean"
        description: "Vote: 0 (for implausible) or 1 (for plausible)"
  PostCorrelation:
    required:
    - "cause"
    - "correlation"
    - "effect"
    properties:
      cause:
        type: "string"
        description: "Cause variable name"
      effect:
        type: "string"
        description: "Effect variable name"
      correlation:
        type: "number"
        format: "double"
        description: "Correlation value"
      vote:
        type: "integer"
        description: "Vote: 0 or 1"
  TrackingReminderDelete:
    required:
    - "id"
    properties:
      id:
        type: "integer"
        description: "Id of the PENDING reminder to be deleted"
  TrackingReminderNotificationSkip:
    required:
    - "id"
    properties:
      id:
        type: "integer"
        description: "Id of the PENDING reminder to be skipped"
  TrackingReminderNotificationSnooze:
    required:
    - "id"
    properties:
      id:
        type: "integer"
        description: "Id of the PENDING reminder to be snoozed"
  TrackingReminderNotificationTrack:
    required:
    - "id"
    properties:
      id:
        type: "integer"
        description: "Id of the PENDING reminder to be tracked"
  TrackingReminder:
    required:
    - "variableId"
    properties:
      id:
        type: "integer"
        format: "int32"
        description: "id"
      clientId:
        type: "string"
        description: "clientId"
      userId:
        type: "integer"
        format: "int32"
        description: "ID of User"
      variableId:
        type: "integer"
        format: "int32"
        description: "Id for the variable to be tracked"
      defaultValue:
        type: "number"
        format: "float"
        description: "Default value to use for the measurement when tracking"
      reminderStartTime:
        type: "string"
        description: "Earliest time of day at which reminders should appear in UTC\
          \ HH:MM:SS format"
      reminderEndTime:
        type: "string"
        description: "Latest time of day at which reminders should appear in UTC HH:MM:SS\
          \ format"
      reminderSound:
        type: "string"
        description: "String identifier for the sound to accompany the reminder"
      reminderFrequency:
        type: "integer"
        format: "int32"
        description: "Number of seconds between one reminder and the next"
      popUp:
        type: "boolean"
        description: "True if the reminders should appear as a popup notification"
      sms:
        type: "boolean"
        description: "True if the reminders should be delivered via SMS"
      email:
        type: "boolean"
        description: "True if the reminders should be delivered via email"
      notificationBar:
        type: "boolean"
        description: "True if the reminders should appear in the notification bar"
      lastReminded:
        type: "string"
        format: "date-time"
        description: "ISO 8601 timestamp for the last time a reminder was sent"
      lastTracked:
        type: "string"
        format: "date-time"
        description: "ISO 8601 timestamp for the last time a measurement was received\
          \ for this user and variable"
      firstDailyReminderTime:
        type: "string"
        format: "time"
        description: "Specific first time of day that the user should be reminded\
          \ to track in UTC HH:MM:SS format"
      secondDailyReminderTime:
        type: "string"
        format: "time"
        description: "Specific second time of day that the user should be reminded\
          \ to track in UTC HH:MM:SS format"
      thirdDailyReminderTime:
        type: "string"
        format: "time"
        description: "Specific third time of day that the user should be reminded\
          \ to track in UTC HH:MM:SS format"
      startTrackingDate:
        type: "string"
        format: "string"
        description: "Earliest date on which the user should be reminded to track\
          \ in YYYY-MM-DD format"
      stopTrackingDate:
        type: "string"
        format: "string"
        description: "Latest date on which the user should be reminded to track in\
          \ YYYY-MM-DD format"
      updatedAt:
        type: "string"
        format: "date-time"
        description: "When the record in the database was last updated. Use ISO 8601\
          \ datetime format. Time zone should be UTC and not local."
      variableName:
        type: "string"
        description: "Name of the variable to be used when sending measurements"
      variableCategoryName:
        type: "string"
        description: "Name of the variable category to be used when sending measurements"
      abbreviatedUnitName:
        type: "string"
        description: "Abbreviated name of the unit to be used when sending measurements"
      combinationOperation:
        type: "string"
        description: "The way multiple measurements are aggregated over time"
        enum:
        - "MEAN"
        - "SUM"
  TrackingReminderNotification:
    required:
    - "id"
    - "trackingReminderId"
    properties:
      id:
        type: "integer"
        format: "int32"
        description: "id for the specific PENDING tracking remidner"
      trackingReminderId:
        type: "integer"
        format: "int32"
        description: "id for the repeating tracking remidner"
      clientId:
        type: "string"
        description: "clientId"
      userId:
        type: "integer"
        format: "int32"
        description: "ID of User"
      variableId:
        type: "integer"
        format: "int32"
        description: "Id for the variable to be tracked"
      pendingReminderTime:
        type: "string"
        format: "date-time"
        description: "ISO 8601 timestamp for the specific time the variable should\
          \ be tracked in UTC.  This will be used for the measurement startTime if\
          \ the track endpoint is used."
      defaultValue:
        type: "number"
        format: "float"
        description: "Default value to use for the measurement when tracking"
      reminderSound:
        type: "string"
        description: "String identifier for the sound to accompany the reminder"
      popUp:
        type: "boolean"
        description: "True if the reminders should appear as a popup notification"
      sms:
        type: "boolean"
        description: "True if the reminders should be delivered via SMS"
      email:
        type: "boolean"
        description: "True if the reminders should be delivered via email"
      notificationBar:
        type: "boolean"
        description: "True if the reminders should appear in the notification bar"
      updatedAt:
        type: "string"
        format: "date-time"
        description: "When the record in the database was last updated. Use ISO 8601\
          \ datetime format. Time zone should be UTC and not local."
      variableName:
        type: "string"
        description: "Name of the variable to be used when sending measurements"
      variableCategoryName:
        type: "string"
        description: "Name of the variable category to be used when sending measurements"
      abbreviatedUnitName:
        type: "string"
        description: "Abbreviated name of the unit to be used when sending measurements"
      combinationOperation:
        type: "string"
        description: "The way multiple measurements are aggregated over time"
        enum:
        - "MEAN"
        - "SUM"
  Unit:
    required:
    - "abbreviatedName"
    - "category"
    - "conversionSteps"
    - "name"
    properties:
      name:
        type: "string"
        description: "Unit name"
      abbreviatedName:
        type: "string"
        description: "Unit abbreviation"
      category:
        type: "string"
        description: "Unit category"
        enum:
        - "Distance"
        - "Duration"
        - "Energy"
        - "Frequency"
        - "Miscellany"
        - "Pressure"
        - "Proportion"
        - "Rating"
        - "Temperature"
        - "Volume"
        - "Weight"
      minimumValue:
        type: "number"
        format: "double"
        description: "The smallest acceptable value for measurements using this unit"
      maximumValue:
        type: "number"
        format: "double"
        description: "The largest acceptable value for measurements using this unit"
      conversionSteps:
        type: "array"
        description: "Conversion steps list"
        items:
          $ref: "#/definitions/ConversionStep"
  UnitCategory:
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "Category name"
  User:
    required:
    - "administrator"
    - "displayName"
    - "email"
    - "id"
    - "loginName"
    - "token"
    - "wpId"
    properties:
      id:
        type: "integer"
        description: "User id"
      wpId:
        type: "integer"
        description: "Wordpress user id"
      displayName:
        type: "string"
        description: "User display name"
      loginName:
        type: "string"
        description: "User login name"
      email:
        type: "string"
        description: "User email"
      token:
        type: "string"
        description: "User token"
      administrator:
        type: "boolean"
        description: "Is user administrator"
  UserTag:
    required:
    - "conversionFactor"
    - "tagVariableId"
    - "taggedVariableId"
    properties:
      taggedVariableId:
        type: "integer"
        description: "This is the id of the variable being tagged with an ingredient\
          \ or something."
      tagVariableId:
        type: "integer"
        description: "This is the id of the ingredient variable whose value is determined\
          \ based on the value of the tagged variable."
      conversionFactor:
        type: "number"
        description: "Number by which we multiply the tagged variable value to obtain\
          \ the tag variable (ingredient) value"
  UserTokenRequest:
    type: "object"
    required:
    - "organizationAccessToken"
    properties:
      user:
        $ref: "#/definitions/UserTokenRequestInnerUserField"
      organizationAccessToken:
        type: "string"
        description: "Organization Access token"
  UserTokenSuccessfulResponse:
    type: "object"
    required:
    - "code"
    - "message"
    - "user"
    properties:
      code:
        type: "integer"
        description: "Status code"
      message:
        type: "string"
        description: "Message"
      user:
        $ref: "#/definitions/UserTokenSuccessfulResponseInnerUserField"
  UserTokenFailedResponse:
    type: "object"
    required:
    - "code"
    - "message"
    - "success"
    properties:
      code:
        type: "integer"
        description: "Status code"
      message:
        type: "string"
        description: "Message"
      success:
        type: "boolean"
  UserTokenRequestInnerUserField:
    properties:
      id:
        type: "integer"
        description: "WordPress user ID"
  UserTokenSuccessfulResponseInnerUserField:
    required:
    - "access_token"
    - "id"
    properties:
      id:
        type: "integer"
        description: "WordPress user ID"
      access_token:
        type: "string"
        description: "User token"
  ValueObject:
    required:
    - "timestamp"
    - "value"
    properties:
      timestamp:
        type: "integer"
        format: "int64"
        description: "Timestamp for the measurement event in epoch time (unixtime)"
      value:
        type: "number"
        format: "double"
        description: "Measurement value"
      note:
        type: "string"
        description: "Optional note to include with the measurement"
  Variable:
    required:
    - "abbreviatedUnitId"
    - "abbreviatedUnitName"
    - "category"
    - "causeOnly"
    - "combinationOperation"
    - "durationOfAction"
    - "earliestMeasurementTime"
    - "fillingValue"
    - "joinWith"
    - "joinedVariables"
    - "lastSource"
    - "lastUnit"
    - "lastValue"
    - "latestMeasurementTime"
    - "maximumValue"
    - "measurementsAtLastAnalysis"
    - "minimumValue"
    - "mostCommonUnit"
    - "mostCommonValue"
    - "name"
    - "numberOfCorrelations"
    - "numberOfMeasurements"
    - "onsetDelay"
    - "originalName"
    - "outcome"
    - "parent"
    - "sources"
    - "subVariables"
    - "updated"
    properties:
      id:
        type: "integer"
        description: "Variable ID"
      name:
        type: "string"
        description: "User-defined variable display name."
      originalName:
        type: "string"
        description: "Name used when the variable was originally created in the `variables`\
          \ table."
      category:
        type: "string"
        description: "Variable category like Mood, Sleep, Physical Activity, Treatment,\
          \ Symptom, etc."
      abbreviatedUnitName:
        type: "string"
        description: "Abbreviated name of the default unit for the variable"
      abbreviatedUnitId:
        type: "integer"
        description: "Id of the default unit for the variable"
      sources:
        type: "string"
        description: "Comma-separated list of source names to limit variables to those\
          \ sources"
      minimumValue:
        type: "number"
        format: "double"
        description: "Minimum reasonable value for this variable (uses default unit)"
      maximumValue:
        type: "number"
        format: "double"
        description: "Maximum reasonable value for this variable (uses default unit)"
      combinationOperation:
        type: "string"
        description: "Way to aggregate measurements over time. Options are \"MEAN\"\
          \ or \"SUM\".  SUM should be used for things like minutes of exercise. \
          \ If you use MEAN for exercise, then a person might exercise more minutes\
          \ in one day but add separate measurements that were smaller.  So when we\
          \ are doing correlational analysis, we would think that the person exercised\
          \ less that day even though they exercised more.  Conversely, we must use\
          \ MEAN for things such as ratings which cannot be SUMMED."
        enum:
        - "MEAN"
        - "SUM"
      fillingValue:
        type: "number"
        format: "double"
        description: "Value for replacing null measurements"
      joinWith:
        type: "string"
        description: "The Variable this Variable should be joined with. If the variable\
          \ is joined with some other variable then it is not shown to user in the\
          \ list of variables."
      joinedVariables:
        type: "array"
        description: "Array of Variables that are joined with this Variable"
        items:
          $ref: "#/definitions/Variable"
      parent:
        type: "integer"
        description: "Id of the parent variable if this variable has any parent"
      subVariables:
        type: "array"
        description: "Array of Variables that are sub variables to this Variable"
        items:
          $ref: "#/definitions/Variable"
      onsetDelay:
        type: "integer"
        description: "How long it takes for a measurement in this variable to take\
          \ effect"
      durationOfAction:
        type: "integer"
        description: "How long the effect of a measurement in this variable lasts"
      earliestMeasurementTime:
        type: "integer"
        description: "Earliest measurement time"
      latestMeasurementTime:
        type: "integer"
        description: "Latest measurement time"
      updated:
        type: "integer"
        description: "When this variable or its settings were last updated"
      causeOnly:
        type: "integer"
        description: "A value of 1 indicates that this variable is generally a cause\
          \ in a causal relationship.  An example of a causeOnly variable would be\
          \ a variable such as Cloud Cover which would generally not be influenced\
          \ by the behaviour of the user."
      numberOfCorrelations:
        type: "integer"
        description: "Number of correlations"
      outcome:
        type: "integer"
        description: "Outcome variables (those with `outcome` == 1) are variables\
          \ for which a human would generally want to identify the influencing factors.\
          \  These include symptoms of illness, physique, mood, cognitive performance,\
          \ etc.  Generally correlation calculations are only performed on outcome\
          \ variables."
      measurementsAtLastAnalysis:
        type: "integer"
        description: "The number of measurements that a given user had for this variable\
          \ the last time a correlation calculation was performed. Generally correlation\
          \ values are only updated once the current number of measurements for a\
          \ variable is more than 10% greater than the measurementsAtLastAnalysis.\
          \  This avoids a computationally-demanding recalculation when there's not\
          \ enough new data to make a significant difference in the correlation."
      numberOfMeasurements:
        type: "integer"
        description: "Number of measurements"
      lastUnit:
        type: "string"
        description: "Last unit"
      lastValue:
        type: "integer"
        description: "Last value"
      mostCommonValue:
        type: "integer"
        description: "Most common value"
      mostCommonUnit:
        type: "string"
        description: "Most common unit"
      lastSource:
        type: "integer"
        description: "Last source"
  VariableCategory:
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "Category name"
  UserVariables:
    required:
    - "user"
    - "variableId"
    properties:
      user:
        type: "integer"
        description: "User ID"
      variableId:
        type: "integer"
        description: "Common variable id"
      durationOfAction:
        type: "integer"
        description: "Estimated duration of time following the onset delay in which\
          \ a stimulus produces a perceivable effect"
      fillingValue:
        type: "integer"
        description: "fillingValue"
      joinWith:
        type: "string"
        description: "joinWith"
      maximumAllowedValue:
        type: "number"
        format: "float"
        description: "maximumAllowedValue"
      minimumAllowedValue:
        type: "number"
        format: "float"
        description: "minimumAllowedValue"
      onsetDelay:
        type: "integer"
        description: "onsetDelay"
      experimentStartTime:
        type: "string"
        description: "Earliest measurement startTime that should be used in analysis\
          \ in ISO format"
      experimentEndTime:
        type: "string"
        description: "Latest measurement startTime that should be used in analysis\
          \ in ISO format"
  VariableNew:
    required:
    - "category"
    - "combinationOperation"
    - "name"
    - "parent"
    - "unit"
    properties:
      name:
        type: "string"
        description: "User-defined variable display name."
      category:
        type: "string"
        description: "Variable category like Mood, Sleep, Physical Activity, Treatment,\
          \ Symptom, etc."
      unit:
        type: "string"
        description: "Abbreviated name of the default unit for the variable"
      combinationOperation:
        type: "string"
        description: "Way to aggregate measurements over time. Options are \"MEAN\"\
          \ or \"SUM\".  SUM should be used for things like minutes of exercise. \
          \ If you use MEAN for exercise, then a person might exercise more minutes\
          \ in one day but add separate measurements that were smaller.  So when we\
          \ are doing correlational analysis, we would think that the person exercised\
          \ less that day even though they exercised more.  Conversely, we must use\
          \ MEAN for things such as ratings which cannot be SUMMED."
        enum:
        - "MEAN"
        - "SUM"
      parent:
        type: "string"
        description: "Parent"
  VariablesNew:
    type: "array"
    description: "New variables"
    items:
      $ref: "#/definitions/VariableNew"
  VoteDelete:
    required:
    - "cause"
    - "effect"
    properties:
      cause:
        type: "string"
        description: "Cause variable name for the correlation to which the vote pertains"
      effect:
        type: "string"
        description: "Effect variable name for the correlation to which the vote pertains"
  Vote:
    required:
    - "cause_id"
    - "client_id"
    - "effect_id"
    - "user_id"
    - "value"
    properties:
      id:
        type: "integer"
        format: "int32"
        description: "id"
      client_id:
        type: "string"
        description: "client_id"
      user_id:
        type: "integer"
        format: "int32"
        description: "ID of User"
      cause_id:
        type: "integer"
        format: "int32"
        description: "ID of the predictor variable"
      effect_id:
        type: "integer"
        format: "int32"
        description: "ID of effect variable"
      value:
        type: "integer"
        format: "int32"
        description: "Value of Vote"
      created_at:
        type: "string"
        format: "date-time"
        description: "When the record was first created. Use ISO 8601 datetime format"
      updated_at:
        type: "string"
        format: "date-time"
        description: "When the record in the database was last updated. Use ISO 8601\
          \ datetime format"
  VariableUserSource:
    required:
    - "earliest_measurement_time"
    - "latest_measurement_time"
    - "source_id"
    - "timestamp"
    - "variable_id"
    properties:
      user_id:
        type: "integer"
        format: "int32"
        description: "ID of User"
      variable_id:
        type: "integer"
        format: "int32"
        description: "ID of variable"
      source_id:
        type: "integer"
        format: "int32"
        description: "ID of source"
      timestamp:
        type: "integer"
        format: "int32"
        description: "Time that this measurement occurred Uses epoch minute (epoch\
          \ time divided by 60)"
      earliest_measurement_time:
        type: "integer"
        format: "int32"
        description: "Earliest measurement time"
      latest_measurement_time:
        type: "integer"
        format: "int32"
        description: "Latest measurement time"
      created_at:
        type: "string"
        format: "date-time"
        description: "When the record was first created. Use ISO 8601 datetime format"
      updated_at:
        type: "string"
        format: "date-time"
        description: "When the record in the database was last updated. Use ISO 8601\
          \ datetime format"
  UserVariableRelationship:
    required:
    - "confidence_level"
    - "confidence_score"
    - "direction"
    - "duration_of_action"
    - "outcome_variable_id"
    - "predictor_unit_id"
    - "predictor_variable_id"
    - "sinn_rank"
    - "strength_level"
    - "strength_score"
    - "value_predicting_high_outcome"
    - "value_predicting_low_outcome"
    properties:
      id:
        type: "integer"
        format: "int32"
        description: "id"
      confidence_level:
        type: "string"
        description: "Our confidence that a consistent predictive relationship exists\
          \ based on the amount of evidence, reproducibility, and other factors"
      confidence_score:
        type: "number"
        format: "float"
        description: "A quantitative representation of our confidence that a consistent\
          \ predictive relationship exists based on the amount of evidence, reproducibility,\
          \ and other factors"
      direction:
        type: "string"
        description: "Direction is positive if higher predictor values generally precede\
          \ higher outcome values. Direction is negative if higher predictor values\
          \ generally precede lower outcome values."
      duration_of_action:
        type: "integer"
        format: "int32"
        description: "Number of seconds over which the predictor variable event is\
          \ expected to produce a perceivable effect following the onset delay"
      error_message:
        type: "string"
        description: "error_message"
      onset_delay:
        type: "integer"
        format: "int32"
        description: "User estimated (or default number of seconds) after cause measurement\
          \ before a perceivable effect is observed"
      outcome_variable_id:
        type: "integer"
        format: "int32"
        description: "Variable ID for the outcome variable"
      predictor_variable_id:
        type: "integer"
        format: "int32"
        description: "Variable ID for the predictor variable"
      predictor_unit_id:
        type: "integer"
        format: "int32"
        description: "ID for default unit of the predictor variable"
      sinn_rank:
        type: "number"
        format: "float"
        description: "A value representative of the relevance of this predictor relative\
          \ to other predictors of this outcome.  Usually used for relevancy sorting."
      strength_level:
        type: "string"
        description: "Can be weak, medium, or strong based on the size of the effect\
          \ which the predictor appears to have on the outcome relative to other variable\
          \ relationship strength scores."
      strength_score:
        type: "number"
        format: "float"
        description: "A value represented to the size of the effect which the predictor\
          \ appears to have on the outcome."
      user_id:
        type: "integer"
        format: "int32"
        description: "user_id"
      vote:
        type: "string"
        description: "vote"
      value_predicting_high_outcome:
        type: "number"
        format: "float"
        description: "Value for the predictor variable (in it's default unit) which\
          \ typically precedes an above average outcome value"
      value_predicting_low_outcome:
        type: "number"
        format: "float"
        description: "Value for the predictor variable (in it's default unit) which\
          \ typically precedes a below average outcome value"
  Update:
    required:
    - "connector_id"
    - "message"
    - "number_of_measurements"
    - "success"
    - "user_id"
    properties:
      id:
        type: "integer"
        format: "int32"
        description: "id"
      user_id:
        type: "integer"
        format: "int32"
        description: "user_id"
      connector_id:
        type: "integer"
        format: "int32"
        description: "connector_id"
      number_of_measurements:
        type: "integer"
        format: "int32"
        description: "number_of_measurements"
      success:
        type: "boolean"
        description: "success"
      message:
        type: "string"
        description: "message"
      created_at:
        type: "string"
        format: "date-time"
        description: "When the record was first created. Use ISO 8601 datetime format"
      updated_at:
        type: "string"
        format: "date-time"
        description: "When the record in the database was last updated. Use ISO 8601\
          \ datetime format"
  Connection:
    required:
    - "connector_id"
    properties:
      id:
        type: "integer"
        format: "int32"
        description: "id"
      user_id:
        type: "integer"
        format: "int32"
        description: "ID of user that owns this correlation"
      connector_id:
        type: "integer"
        format: "int32"
        description: "The id for the connector data source for which the connection\
          \ is connected"
      connect_status:
        type: "string"
        description: "Indicates whether a connector is currently connected to a service\
          \ for a user."
      connect_error:
        type: "string"
        description: "Error message if there is a problem with authorizing this connection."
      update_requested_at:
        type: "string"
        format: "date-time"
        description: "Time at which an update was requested by a user."
      update_status:
        type: "string"
        description: "Indicates whether a connector is currently updated."
      update_error:
        type: "string"
        description: "Indicates if there was an error during the update."
      last_successful_updated_at:
        type: "string"
        format: "date-time"
        description: "The time at which the connector was last successfully updated."
      created_at:
        type: "string"
        format: "date-time"
        description: "When the record was first created. Use ISO 8601 datetime format"
      updated_at:
        type: "string"
        format: "date-time"
        description: "When the record in the database was last updated. Use ISO 8601\
          \ datetime format"
  Credential:
    required:
    - "attr_key"
    - "attr_value"
    - "connector_id"
    properties:
      user_id:
        type: "integer"
        description: "ID of user that owns this credential"
      connector_id:
        type: "integer"
        description: "The id for the connector data source from which the credential\
          \ was obtained"
      attr_key:
        type: "string"
        description: "Attribute name such as token, userid, username, or password"
      attr_value:
        type: "string"
        description: "Encrypted value for the attribute specified"
      created_at:
        type: "string"
        format: "date-time"
        description: "When the record was first created. Use ISO 8601 datetime format"
      updated_at:
        type: "string"
        format: "date-time"
        description: "When the record in the database was last updated. Use ISO 8601\
          \ datetime format"
  UserVariable:
    required:
    - "variable_id"
    properties:
      parent_id:
        type: "integer"
        format: "int32"
        description: "ID of the parent variable if this variable has any parent"
      user_id:
        type: "integer"
        format: "int32"
        description: "User ID"
      client_id:
        type: "string"
        description: "client_id"
      variable_id:
        type: "integer"
        format: "int32"
        description: "ID of variable"
      default_unit_id:
        type: "integer"
        format: "int32"
        description: "ID of unit to use for this variable"
      minimum_allowed_value:
        type: "number"
        format: "float"
        description: "Minimum reasonable value for this variable (uses default unit)"
      maximum_allowed_value:
        type: "number"
        format: "float"
        description: "Maximum reasonable value for this variable (uses default unit)"
      filling_value:
        type: "number"
        format: "float"
        description: "Value for replacing null measurements"
      join_with:
        type: "integer"
        format: "int32"
        description: "The Variable this Variable should be joined with. If the variable\
          \ is joined with some other variable then it is not shown to user in the\
          \ list of variables"
      onset_delay:
        type: "integer"
        format: "int32"
        description: "How long it takes for a measurement in this variable to take\
          \ effect"
      duration_of_action:
        type: "integer"
        format: "int32"
        description: "Estimated duration of time following the onset delay in which\
          \ a stimulus produces a perceivable effect"
      variable_category_id:
        type: "integer"
        format: "int32"
        description: "ID of variable category"
      updated:
        type: "integer"
        format: "int32"
        description: "updated"
      public:
        type: "integer"
        format: "int32"
        description: "Is variable public"
      cause_only:
        type: "boolean"
        description: "A value of 1 indicates that this variable is generally a cause\
          \ in a causal relationship.  An example of a causeOnly variable would be\
          \ a variable such as Cloud Cover which would generally not be influenced\
          \ by the behaviour of the user"
      filling_type:
        type: "string"
        description: "0 -> No filling, 1 -> Use filling-value"
      number_of_measurements:
        type: "integer"
        format: "int32"
        description: "Number of measurements"
      number_of_processed_measurements:
        type: "integer"
        format: "int32"
        description: "Number of processed measurements"
      measurements_at_last_analysis:
        type: "integer"
        format: "int32"
        description: "Number of measurements at last analysis"
      last_unit_id:
        type: "integer"
        format: "int32"
        description: "ID of last Unit"
      last_original_unit_id:
        type: "integer"
        format: "int32"
        description: "ID of last original Unit"
      last_value:
        type: "number"
        format: "float"
        description: "Last Value"
      last_original_value:
        type: "integer"
        format: "int32"
        description: "Last original value which is stored"
      last_source_id:
        type: "integer"
        format: "int32"
        description: "ID of last source"
      number_of_correlations:
        type: "integer"
        format: "int32"
        description: "Number of correlations for this variable"
      status:
        type: "string"
        description: "status"
      error_message:
        type: "string"
        description: "error_message"
      last_successful_update_time:
        type: "string"
        format: "date-time"
        description: "When this variable or its settings were last updated"
      standard_deviation:
        type: "number"
        format: "float"
        description: "Standard deviation"
      variance:
        type: "number"
        format: "float"
        description: "Variance"
      minimum_recorded_value:
        type: "number"
        format: "float"
        description: "Minimum recorded value of this variable"
      maximum_recorded_daily_value:
        type: "number"
        format: "float"
        description: "Maximum recorded daily value of this variable"
      mean:
        type: "number"
        format: "float"
        description: "Mean"
      median:
        type: "number"
        format: "float"
        description: "Median"
      most_common_unit_id:
        type: "integer"
        format: "int32"
        description: "Most common Unit ID"
      most_common_value:
        type: "number"
        format: "float"
        description: "Most common value"
      number_of_unique_daily_values:
        type: "number"
        format: "float"
        description: "Number of unique daily values"
      number_of_changes:
        type: "integer"
        format: "int32"
        description: "Number of changes"
      skewness:
        type: "number"
        format: "float"
        description: "Skewness"
      kurtosis:
        type: "number"
        format: "float"
        description: "Kurtosis"
      latitude:
        type: "number"
        format: "float"
        description: "Latitude"
      longitude:
        type: "number"
        format: "float"
        description: "Longitude"
      location:
        type: "string"
        description: "Location"
      experiment_start_time:
        type: "string"
        format: "date-time"
        description: "Earliest measurement start_time to be used in analysis. Use\
          \ ISO 8601 datetime format"
      experiment_end_time:
        type: "string"
        format: "date-time"
        description: "Latest measurement start_time to be used in analysis. Use ISO\
          \ 8601 datetime format"
      created_at:
        type: "string"
        format: "date-time"
        description: "When the record was first created. Use ISO 8601 datetime format"
      updated_at:
        type: "string"
        format: "date-time"
        description: "When the record in the database was last updated. Use ISO 8601\
          \ datetime format"
      outcome:
        type: "boolean"
        description: "Outcome variables (those with `outcome` == 1) are variables\
          \ for which a human would generally want to identify the influencing factors.\
          \  These include symptoms of illness, physique, mood, cognitive performance,\
          \ etc.  Generally correlation calculations are only performed on outcome\
          \ variables"
      sources:
        type: "string"
        description: "Comma-separated list of source names to limit variables to those\
          \ sources"
      earliest_source_time:
        type: "integer"
        format: "int32"
        description: "Earliest source time"
      latest_source_time:
        type: "integer"
        format: "int32"
        description: "Latest source time"
      earliest_measurement_time:
        type: "integer"
        format: "int32"
        description: "Earliest measurement time"
      latest_measurement_time:
        type: "integer"
        format: "int32"
        description: "Latest measurement time"
      earliest_filling_time:
        type: "integer"
        format: "int32"
        description: "Earliest filling time"
      latest_filling_time:
        type: "integer"
        format: "int32"
        description: "Latest filling time"
  inline_response_200:
    properties:
      success:
        type: "boolean"
      data:
        type: "array"
        items:
          $ref: "#/definitions/TrackingReminderNotification"
  inline_response_200_1:
    properties:
      success:
        type: "boolean"
      data:
        type: "array"
        items:
          $ref: "#/definitions/TrackingReminder"
  inline_response_200_2:
    properties:
      success:
        type: "boolean"
      data:
        $ref: "#/definitions/TrackingReminder"
  inline_response_200_3:
    properties:
      success:
        type: "boolean"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Connection"
  inline_response_200_4:
    properties:
      data:
        type: "array"
        items:
          $ref: "#/definitions/Credential"
      success:
        type: "boolean"
  inline_response_200_5:
    properties:
      success:
        type: "boolean"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Measurement"
  inline_response_200_6:
    properties:
      success:
        type: "boolean"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Update"
  inline_response_200_7:
    properties:
      success:
        type: "boolean"
      data:
        type: "array"
        items:
          $ref: "#/definitions/UserVariableRelationship"
  inline_response_200_8:
    properties:
      success:
        type: "boolean"
      data:
        type: "array"
        items:
          $ref: "#/definitions/UserVariable"
  inline_response_200_9:
    properties:
      success:
        type: "boolean"
      data:
        type: "array"
        items:
          $ref: "#/definitions/VariableUserSource"
  inline_response_200_10:
    properties:
      success:
        type: "boolean"
      data:
        type: "array"
        items:
          $ref: "#/definitions/Vote"
  inline_response_200_11:
    properties:
      success:
        type: "boolean"
      data:
        $ref: "#/definitions/Measurement"
  inline_response_200_12:
    properties:
      success:
        type: "boolean"
      data:
        type: "string"
securityRequirement:
- oauth2:
  - "basic"
  - "readmeasurements"
  - "writemeasurements"
- internalApiKey: []
